- name: "atomicity_in_apply"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "atomicity_in_apply"
    fault_injection_name: "raft_server_atomicity_check"
    num_writes: 10
    start_key: 1000

  tasks:
  - block:
      ####################################################################
      # 0. CHECK APP TYPE
      ####################################################################
      - name: "{{ recipe_name }}: Check if the app_type is covid"
        vars:
          app_type: "{{ app_type }}"
        debug:
          msg: "app_type should be covid"
        failed_when: (app_type != "covid")

      ####################################################################
      # 1. START SERVERS
      ####################################################################
      - name: "{{ recipe_name }}: Print the UUIDs of all the servers"
        include_role:
          name: common
          tasks_from: get_server_uuid_info

      - name: "{{ recipe_name }}: Start all the servers in the cluster"
        include_role:
          name: common
          tasks_from: start_server_golang
        vars:
          ServerUUID: "{{ NonRunningServers[item] }}"
        loop: "{{ range(0, NonRunningServers | length) | list }}"

      ####################################################################
      # 2. START CLIENT
      ####################################################################
      - name: "{{ recipe_name }}: Get unused client uuid for starting the client"
        include_role:
          name: common
          tasks_from: get_new_client_uuid
        register: client_uuid

      ####################################################################
      # 3. WAIT FOR LEADER
      ####################################################################
      - name: "Wait until leader election happens"
        vars:
          stage: "wait_leader_election"
        debug:
          msg: "Waiting for leader election"
        until: >
          lookup('niova_ctlrequest', 'lookup', NonRunningServers[item], '/raft_root_entry/0/leader-uuid') != "null"
        retries: 10
        delay: 1
        loop: "{{ range(0, NonRunningServers | length) | list }}"

      - name: "{{ recipe_name }}: Get the leader UUID"
        include_role:
          name: common
          tasks_from: get_leader_uuid
        register: leader_info

      - name: "{{ recipe_name }}: Get leader UUID directly"
        vars:
          raft_key: "/raft_root_entry/0/leader-uuid"
          leader_dict: "{{ lookup('niova_ctlrequest', 'lookup', NonRunningServers, raft_key) | first }}"
        set_fact:
          current_leader_uuid: "{{ leader_dict['/0/leader-uuid'] }}"

      ####################################################################
      # 4. FIRST SET OF MONOTONIC WRITES
      ####################################################################
      - name: "{{ recipe_name }}: Generate App UUID for monotonic writes"
        shell: "/usr/bin/uuid"
        register: app_uuid

      - name: "{{ recipe_name }}: Get the path for csv file"
        set_fact:
          NIOVA_BIN_PATH: "{{ lookup('env','NIOVA_BIN_PATH') }}"

      - name: "{{ recipe_name }}: Create monotonic CSV file for writes"
        copy:
          content: |
            location,iso_code,date,total_vaccinations,people_vaccinated,people_fully_vaccinated,daily_vaccinations_raw,daily_vaccinations,total_vaccinations_per_hundred,people_vaccinated_per_hundred,people_fully_vaccinated_per_hundred,daily_vaccinations_per_million,
            {{ start_key }},AFG,16-03-2021,54000,54000,,,2862,0.14,0.14,,74,
            {{ start_key + 1 }},OWID_AFR,03-06-2021,34365454,25234549,8914235,278659,668496,2.56,1.88,0.66,499,
            {{ start_key + 2 }},ALB,18-02-2021,3049,2438,611,1348,254,0.11,0.08,0.02,88,
            {{ start_key + 3 }},AND,08-03-2021,3611,2439,1172,,108,4.67,3.16,1.52,1398,
            {{ start_key + 4 }},DZA,19-02-2021,75000,,,,3748,0.17,,,85,
            {{ start_key + 5 }},AGO,29-03-2021,130750,130750,,,8057,0.4,0.4,,245,
            {{ start_key + 6 }},ARM,31-03-2021,565,565,,,,0.02,0.02,,,
            {{ start_key + 7 }},AIA,22-04-2021,6898,6115,783,,106,45.98,40.76,5.22,7066,
            {{ start_key + 8 }},ABW,10-04-2021,41096,29197,11899,,1278,38.49,27.35,11.14,11970,
            {{ start_key + 9 }},ATG,31-05-2021,50329,33463,16866,,1278,51.39,34.17,17.22,13050,
          dest: "{{ NIOVA_BIN_PATH }}/monotonic_writes.csv"

      - name: "{{ recipe_name }}: Write monotonic keys to COVID Application"
        vars:
          stage: "CovidWriteMulti"
          cmd: "WriteMulti#{{ NIOVA_BIN_PATH }}/monotonic_writes.csv#{{ recipe_name }}_{{ stage }}"
          WriteMultiValue: "{{ lookup('app_cmd', cmd, client_uuid.stdout) }}"
        debug:
          msg: "write monotonic entries"
        with_items:
          - "{{ WriteMultiValue }}"
        register: WriteMulti
        no_log: true





      ####################################################################
      # 5. FAULT INJECTION
      ####################################################################
      - name: "{{ recipe_name }}: Apply fault injection on the leader"
        include_role:
          name: common
          tasks_from: set_fault_injection_and_verify
        vars:
          ServerUUID: "{{ current_leader_uuid }}"

      ####################################################################
      # 6. VERIFY PERSISTENCE
      ####################################################################
      - name: "{{ recipe_name }}: Verify if the recent key is persisted"
        include_role:
          name: common
          tasks_from: verify_persistence
        vars:
          recent_key: "{{ start_key + num_writes - 1 }}"
          leader_uuid: "{{ current_leader_uuid }}"
        register: key_persistence_result

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
          terminate_recipe: true
