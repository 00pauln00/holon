- name: "Post Run"
  hosts: localhost
  vars:
    recipe_name: "post_run"

  tasks:

  - name: "Get the status of all running peers before termination"
    include_role:
      name: common
      tasks_from: get_follower_stats

  #Get all values from all peers
  - name: "{{ recipe_name }}: Get the server information for all running servers."
    include_role:
      name: common
      tasks_from: get_all_values_from_all_peers

  - name: "Check if recipe failed and post_run is disabled"
    debug:
      msg: "Check the recipe execution status"
    failed_when: recipe_result == True and disable_post_run == True

  - name: "Exit now as post run is disabled"
    meta: end_play
    when: disable_post_run == "True" or disable_post_run == "true" or disable_post_run == True

  - name: "Get the json path"
    set_fact:
        base_dir="{{ recipe_params['base_dir']}}"
        raft_uuid="{{ recipe_params['raft_uuid']}}"

  - name: "prepare path to read recipe JSON file"
    shell: cat "{{base_dir}}"/"{{raft_uuid}}"/"{{raft_uuid}}".json
    register: result

  - name: "Convert output to JSON format"
    set_fact:
      jsondata: "{{ result.stdout | from_json }}"

  - name: "Get the running peer's  UUID(s) from recipe JSON"
    set_fact:
       peer_uuid: "{{ jsondata | json_query(jmesquery) }}"
    vars:
       jmesquery: 'raft_process.*.process_uuid'


  - name: "Get the number of running peers"
    set_fact:
       running_npeers: "{{ peer_uuid|length}}"

  - name: "Kill the processes after recipe execution"
    set_fact:
       kill_peer0="{{lookup('niova_raftprocess', 'kill', peer_uuid[item], wantlist=True)}}"
    loop: "{{ range(0, running_npeers| int)| list}}"

  - name: "Check status post run"
    debug:
      msg: "If recipe was rescued for post run, make sure we return error"
    failed_when: recipe_result == True
