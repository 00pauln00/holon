- import_playbook: niova_block_test_with_multiple_nisd.yml

- name: "niova_block_gossip_info_check"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "niova_block_gossip_info_check"
    parent: "niova_block_test_with_multiple_nisd"

  tasks:
  - block:
     - name: "Check if parent recipe failed"
       debug: msg="Check if parent recipe {{ parent }} failed"
       failed_when: terminate_recipe == true

      # check for the app_type
     - name: "{{ recipe_name }}: Check if the app_type is 'controlplane'."
       vars:
         app_type: "{{ app_type }}"
       debug:
         msg: "app_type is: {{ app_type }}"
       failed_when:
         (app_type != "controlplane")

     - name: "{{ recipe_name }}: Kill one of the lookout-process."
       debug:
         msg:  "{{ lookup('niova_raftprocess', 'kill', lookout_uuids[0],  ) }}"

     - name: "{{ recipe_name }}: Wait until killed niova-lookout process's status gets changed."
       vars:
         getLookoutUUID: "{{ lookout_uuids[0] }}"
         input_param: {
                  'Operation': 'membership',
                  'OutfileName': 'wait_for_killedlookout_{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "Verifying lookout's Status"
       until: lookup('controlplane', 'ncpc', input_param  ) | dict2items | map(attribute='value') | map(attribute=getLookoutUUID) | map(attribute='Status') | list | first == "failed"
       retries: 10
       delay: 1

     - name: "{{ recipe_name }}: Verify killed niova-lookout gossip details."
       vars:
         input_param: {
                  'Operation': 'membership',
                  'OutfileName': 'verify_killed_lookout_{{ lookout_uuids[0] }}'
                  }
         killedLookout: "{{ lookup('controlplane', 'ncpc', input_param  ) }}"
       debug:
         msg: "Verify killed lookout details."
       failed_when: killedLookout['membership'][lookout_uuids[0]]['Status'] != "failed"

     - name: "{{ recipe_name }}: Restart same niova-lookout process."
       vars:
         input_param: {
                 'lookout_uuid' :  '{{ lookout_uuids[0] }}',
                 'aport' : '4900',
                 'hport' : '9000',
                 'rport' : '5900',
                 'uport' : '1060'
                 }
       debug:
         msg:
          -  "{{ lookup('controlplane', 'niova-lookout', input_param  ) }}"
       no_log: True

     - name: "{{ recipe_name }}: Wait until restarted niova-lookout process's status gets changed."
       vars:
         getLookoutUUID: "{{ lookout_uuids[0] }}"
         input_param: {
                  'Operation': 'membership',
                  'OutfileName': 'wait_for_restarted_lookout_{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "Verifying lookout's Status"
       until: lookup('controlplane', 'ncpc', input_param  ) | dict2items | map(attribute='value') | map(attribute=getLookoutUUID) | map(attribute='Status') | list | first == "alive"
       retries: 10
       delay: 1

     - name: "{{ recipe_name }}: Verify niova-lookout process's status is 'alive' now."
       vars:
         input_param: {
                  'Operation': 'membership',
                  'OutfileName': 'verify_restarted_lookout_{{ lookout_uuids[0] }}'
                  }
         restartedLookoutStatus: "{{ lookup('controlplane', 'ncpc', input_param  ) }}"
       debug:
         msg: "Verify restarted lookout process's gossip details"
       failed_when: restartedLookoutStatus['membership'][lookout_uuids[0]]['Status'] != "alive"

     - name: Generate new NISD UUID
       shell: uuidgen
       register: newNisdUuid

     - name: "{{ recipe_name }}: Start niova-block-ctl process."
       vars:
         input_param: {
                  'nisd_uuid': '{{ newNisdUuid["stdout_lines"][0] }}',
                  'nisd_dev_size': '21474836480',
                  'lookout_uuid' :  '{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "{{ lookup('nisd_handler', 'niova-block-ctl', input_param  ) }}"
       no_log: True

     - name: "{{ recipe_name }}: Start new nisd process."
       vars:
         input_param: {
                  'nisd_uuid' : '{{ newNisdUuid["stdout_lines"][0] }}',
                  'uport' : '1060',
                  'lookout_uuid' :  '{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "{{ lookup('nisd_handler', 'nisd', input_param  ) }}"
       no_log: True

     - name: "{{ recipe_name }}: Wait until Nisd's status gets updated."
       vars:
         getNisd: "{{ newNisdUuid['stdout_lines'][0] }}"
         input_param: {
                  'Operation': 'NISDGossip',
                  'OutfileName': 'wait_for_new_nisdStatus_{{ getNisd }}'
                  }
       debug:
         msg: "Verifying NISD's Status"
       until: lookup('controlplane', 'ncpc', input_param  ) | dict2items | map(attribute='value') | map(attribute=getNisd) | map(attribute='Status') | list | first == "Alive"
       retries: 100
       delay: 1

     - name: "{{ recipe_name }}: Verify new nisd process's gossip info."
       vars:
         input_param: {
                  'Operation': 'NISDGossip',
                  'OutfileName': 'verify_nisd_{{ newNisdUuid["stdout_lines"][0] }}'
                  }
         new_nisd_membership: "{{ lookup('controlplane', 'ncpc', input_param  ) }}"
       debug:
         msg: "verify new nisd's gossip info"
       failed_when: new_nisd_membership['NISDGossip'][newNisdUuid['stdout_lines'][0]]['Status'] != "Alive"

     - name: "{{ recipe_name }}: Kill one of the nisd process."
       debug:
         msg:  "{{ lookup('niova_raftprocess', 'kill', nisd_uuids[0],  ) }}"
       no_log: True

     - name: "{{ recipe_name }}: Wait until killed nisd's status gets changed."
       vars:
         getNisd: "{{ nisd_uuids[0] }}"
         input_param: {
                  'Operation': 'NISDGossip',
                  'OutfileName': 'wait_for_killed_nisdStatus_{{ nisd_uuids[0] }}'
                  }
       debug:
         msg: "Verifying NISD's Status"
       until: lookup('controlplane', 'ncpc', input_param  ) | dict2items | map(attribute='value') | map(attribute=getNisd) | map(attribute='Status') | list | first == "Dead"
       retries: 100
       delay: 1

     - name: "{{ recipe_name }}: Verify nisd process's status is 'Dead'."
       vars:
         input_param: {
                  'Operation': 'NISDGossip',
                  'OutfileName': 'killed_nisd_status_{{ nisd_uuids[0] }}'
                  }
         verifyKilledNisdStatus: "{{ lookup('controlplane', 'ncpc', input_param  ) }}"
       debug:
         msg: "Verify killed nisd process's gossip details"
       failed_when: verifyKilledNisdStatus['NISDGossip'][nisd_uuids[0]]['Status'] != "Dead"

     - name: "{{ recipe_name }}: Restart same nisd process."
       vars:
          input_param: {
                  'nisd_uuid' : '{{ nisd_uuids[0] }}',
                  'uport' : '1060',
                  'lookout_uuid' :  '{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "{{ lookup('nisd_handler', 'nisd', input_param  ) }}"

     - name: "{{ recipe_name}}: Wait until nisd_root_entry gets updated"
       vars:
         stage: "wait_for_nisd_root_entry"
         lookout_uuid: "{{ lookout_uuids[0] }}"
       debug:
         msg: "Waiting for nisd to get updated"
       until: lookup('niova_ctlrequest', 'lookup', nisd_uuids[0], '/nisd_root_entry/0/status', 'nisd', lookout_uuid,  ) | dict2items | map(attribute='value') | list | first == "running"
       retries: 30
       delay: 1

     - name: "{{ recipe_name }}: Wait until restarted nisd's status gets changed."
       vars:
         getNisd: "{{ nisd_uuids[0] }}"
         input_param: {
                  'Operation': 'NISDGossip',
                  'OutfileName': 'restarted_nisdGossip_{{ nisd_uuids[0] }}'
                  }
       debug:
         msg: "Verifying NISD's Status"
       until: lookup('controlplane', 'ncpc', input_param  ) | dict2items | map(attribute='value') | map(attribute=getNisd) | map(attribute='Status') | list | first == "Alive"
       retries: 100
       delay: 1

     - name: "{{ recipe_name }}: Verify nisd process's status is 'alive' now."
       vars:
         input_param: {
                  'Operation': 'NISDGossip',
                  'OutfileName': 'verify_restarted_nisd_status_{{ nisd_uuids[0] }}'
                  }
         restartNisdStatus: "{{ lookup('controlplane', 'ncpc', input_param  ) }}"
       debug:
         msg: "Verify restarted nisd process's gossip details"
       failed_when: restartNisdStatus['NISDGossip'][nisd_uuids[0]]['Status'] != "Alive"

    rescue:
     - name: "Recipe: {{ recipe_name }} failed"
       set_fact:
         terminate_recipe: true
