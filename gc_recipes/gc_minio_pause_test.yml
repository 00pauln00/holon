- name: "gc_minio_pause_test"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "gc_minio_pause_test"
    parent: none

  tasks:
    - block:
        - name: "{{ recipe_name }}: Start minio server"
          vars:
            s3_dir: "/local/minio_data"
          debug:
            msg:
              - "{{ lookup('obj_storage', 'minio', 'start', s3_dir) }}"
          when: s3Support == "true"
          register: minio_pid

        - name: "Generate 200,000 vblk entries"
          vars:
            dbi_param:
              vbAmount: "200000"
              maxVblks: "1000"
              vblkPer: "1000"
              maxPunches: "0"
              punchAmount: "0"
              seqStart: "0"
              startVblk: "0"
              genType: "1"
              seed: "1"
              blockSize: "16"
              blockSizeMax: "32"
              punchesPer: "0"
              maxPunchSize: "1"
              chunk: "1"
            input_param:
              total_chunks: 1
              is_random: true
              remove_files: false
          debug:
            msg:
              - "{{ lookup('data_gen', 'generator', dbi_param, input_param) }}"
          register: chunk

        - name: "{{ recipe_name }}: Pause the minio server"
          vars:
            s3_dir: "/local/minio_data"
          debug:
            msg:
              - "{{ lookup('obj_storage', 'minio', 'pause', s3_dir, minio_pid.msg[0][0]) }}"

        - name: "{{ recipe_name }}: Start GCService"
          vars:
            params:
              {
                "dry_run": false,
                "del_dbo": true,
                "partition": false,
                "total_chunks": 0,
                "force_gc": true,
              }
          debug:
            msg:
              - "{{ lookup('garbage_collection', 'daemon', 'start', params) }}"

        - name: Wait for 60 seconds
          pause:
            seconds: 60

        - name: "{{ recipe_name }}: Resume the minio server"
          vars:
            s3_dir: "/local/minio_data"
          debug:
            msg:
              - "{{ lookup('obj_storage', 'minio', 'resume', s3_dir, minio_pid.msg[0][0]) }}"

        - name: "{{ recipe_name }}: Wait until GC marker file present."
          vars:
            params: { "chunk": "1" }
          debug:
            msg: "Waiting for GC Marker File"
          until: lookup('obj_storage', 'get_markers', params) is not none
          retries: 500
          delay: 2

        - name: "{{ recipe_name }}: Wait until GC marker and NISD marker gets match."
          vars:
            params: { "chunk": "1" }
            Sequence: "{{ lookup('obj_storage', 'get_markers', params) }}"
            gc_marker: "{{ Sequence[0] }}"
            nisd_marker: "{{ Sequence[1] }}"
          debug:
            msg: "Wait until marker values gets match"
          until: (gc_marker is not none) and (nisd_marker is not none) and ((gc_marker | int) == (nisd_marker | int))
          retries: 500
          delay: 2

        - name: "{{ recipe_name }}: Start data validation"
          vars:
            Chunk: "{{ chunk['msg'][0] }}"
          debug:
            msg: "{{ lookup('data_gen', 'validator',  Chunk) }}"

      rescue:
        - name: "Recipe: {{ recipe_name }} failed"
          set_fact:
            terminate_recipe: true
