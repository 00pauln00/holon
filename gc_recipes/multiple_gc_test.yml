- name: "multiple_gc_test"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "multiple_gc_test"

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "/local/minio_data"
      debug:
         msg:
          - "{{ lookup('obj_storage', 'minio', 'start', s3_dir) }}"
      when: s3Support == "true"

    - name: "{{ recipe_name }}: Generate reversed sequential DBI requests."
      include_role:
        name: common
        tasks_from: generate_pattern_dbis
      vars:
        Type: "2"     #You can pass different pattern value here.
        ChunkNum: "-1"
      register: chunk

    - debug:
        msg: "{{ chunk['msg'][0] }}"

    - name: "{{ recipe_name }}: Run gc algorithm without deletion"
      vars:
        input_param:
          debug_mode: true
          chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('garbage_collection', 'single_exec', 'start', input_param) }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Generate reversed sequential DBI requests."
      include_role:
        name: common
        tasks_from: generate_pattern_dbis
      vars:
        Type: "2"     #You can pass different pattern value here.
        ChunkNum: "{{ chunk['msg'][0] }}"

    - name: "{{ recipe_name }}: Run gc algorithm with deletion"
      vars:
        input_param:
          debug_mode: false
          chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('garbage_collection', 'single_exec', 'start', input_param) }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Again run gc algorithm with deletion"
      vars:
        input_param:
          debug_mode: false
          chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('garbage_collection', 'single_exec', 'start', input_param) }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Start data validation"
      vars:
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('data_gen', 'validator', Chunk) }}"
