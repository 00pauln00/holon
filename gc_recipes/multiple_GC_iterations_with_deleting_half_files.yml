- name: "multiple_GC_iterations_with_deleting_half_files"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "multiple_GC_iterations_with_deleting_half_files"

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "/local/minio_data"
      debug:
         msg:
          - "{{ lookup('obj_storage', 'minio', 'start', s3_dir,  ) }}"
      when: s3Support == "true"

    - name: "{{ recipe_name }}: Generate random DBI requests."
      include_role:
        name: common
        tasks_from: generate_pattern_dbis
      vars:
        Type: "0"     #You can pass different pattern value here.
        ChunkNum: "-1"
      register: chunk

    - name: "{{ recipe_name }}: Start gc algorithm"
      vars:
        input_params:
          debug_mode: true
          chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('garbage_collection', 'single_exec', 'start', input_param)[0] }}"
      register: gc_output


    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Get dbi file names."
      vars:
        formal_params:
          chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('obj_storage', 'get_list', formal_params,  )[0] }}"
      register: list_op
      no_log: true
      
    - name: "{{ recipe_name }}: Delete 50 percent DBI DBO generated by dummy generator."
      vars:
        input_params:
          chunk: "{{ chunk['msg'][0] }}"
          output: "{{ list_op['msg'] }}"
      debug:
         msg: "{{ lookup('obj_storage', 'delete_half_files', input_param) }}"

    - name: "{{ recipe_name }}: Generate random DBI requests."
      include_role:
        name: common
        tasks_from: generate_pattern_dbis
      vars:
        Type: "0"     #You can pass different pattern value here.
        ChunkNum: "{{ chunk['msg'][0] }}"

    - name: "{{ recipe_name }}: Start gc algorithm"
      vars:
        input_params:
          debug_mode: false
          chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('garbage_collection', 'single_exec', 'start', input_param)[0] }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Start data validation"
      vars:
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('data_gen', 'validator', Chunk,  ) }}"

