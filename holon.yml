- name: "Holon framework"
  hosts: localhost
  connection: local

  vars_files:
    - ./cmdline_vars.yml

  tasks:
  - name: "Print ansible version"
    debug:
      msg: "Ansible version is  {{ ansible_version.full }}"

  - name: "Get Raft UUID"
    shell: "/usr/bin/uuid"
    register: cluster_uuid

  - name: "Initalize error handling"
    set_fact:
      terminate_recipe: false

  - name: "Default Values"
    set_fact:
      dir_path: "{{ dir_path | default('/tmp/holon_recipes_run') }}"
      backend_type: "{{ backend_type | default('raft')}}"
      srv_port: "{{ srv_port | default(6000) }}"
      npeers: "{{ npeers | default(5) }}"
      nclients: "{{ nclients | default(10) }}"
      client_port: "{{ client_port | default(13000) }}"
      disable_post_run: "{{ disable_post_run | default(false) | bool }}"
      coalesced_wr: "{{ coalesced_wr | default(0) | string }}"
      sync: "{{ sync | default(0) | string }}"
      num_clients: "{{ num_clients | default(10) }}"
      ClientIndex: 0
      app_type: "{{ app_name | default('pumicedb') }}"
      prometheus_support: "{{ prometheus | default(0) }}"
      nlookouts: "{{ nlookouts | default(5) | int }}"
      nnisds: "{{ nnisds | default(50) | int }}"
      blocktest_input_file_path: "{{ blocktest_file_path | default(false) | bool }}"
      nthreads:  "{{ nthreads | default(2) | int }}"
      coverdir: "{{ cover | default('') | string }}"
    failed_when: >
      ((srv_port | int) >= 65536) or
      ((client_port | int) >= 65536) or
      ((backend_type != "raft") and (backend_type != "pumicedb"))

  - name: "Print the special feature parameters."
    debug:
      msg:
       - "The app running is: {{ app_type }}"
       - "Coalesced enabled: {{ coalesced_wr }}"
       - "Sync enabled: {{ sync }}"

  - name: "Check if ports are already in use"
    vars:
      config_params:
        startup_check: "port_check"
        srv_port: "{{ srv_port }}"
        client_port: "{{ client_port }}"
    debug:
       msg: "{{ lookup('holon_startup', config_params, wantlist=True) }}"

  #- name: "Install python modules if not installed previously"
  #  vars:
  #    config_params:
  #      startup_check: "python_module_install"
  #  debug:
  #    msg: "{{ lookup('holon_startup', config_params, wantlist=True) }}"

  - name: "Prepare parameter to pass across recipes"
    set_fact:
       ClusterParams:
           base_dir: "{{ dir_path }}"
           raft_uuid: "{{ cluster_uuid.stdout}}"
           ctype: "{{ backend_type }}"
           npeers: "{{ npeers }}"
           nclients: "{{ nclients }}"
           client_port: "{{ client_port }}"
           srv_port: "{{ srv_port }}"
           app_type: "{{ app_type }}"
           coal_wr: "{{ coalesced_wr }}"
           sync_mode: "{{ sync }}"
           file_counter: 0
           prometheus_support: "{{ prometheus_support }}"
           nlookouts: "{{ nlookouts | default(5) }}"
           nnisds: "{{ nnisds | default(5) }}"
           niovaBlockTest_input_file_path: "{{ blocktest_input_file_path }}"
           nthreads:  "{{ nthreads }}"
           coverdir: "{{ coverdir }}"


  - name: "Prepare server configs"
    set_fact: ClusterInfo="{{lookup('niova_raftconfig', "server", wantlist=True)}}"

  - name: "Show the values"
    debug:
      msg:
        - "Directory path: {{ dir_path }}"
        - "Port is {{ srv_port }}"
        - "Nservers is: {{ npeers }}"
        - "client port is {{ client_port }}"
        - "Raft UUID is {{ cluster_uuid.stdout }}"
        - "Recipe: {{ recipe }}"
        - "Raft params: {{ ClusterParams }}"
        - "Disable post run : {{ disable_post_run }}"
        - "Number of thread count: {{ nthreads }}"

- import_playbook: recipes/"{{ recipe }}"
  vars:
    recipe_params: "{{ ClusterParams }}"

- import_playbook: "post_run.yml"
  vars:
    recipe_params: "{{ ClusterParams }}"
    recipe_result: "{{ terminate_recipe }}"
