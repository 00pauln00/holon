- import_playbook: basic_process_ctl.yml

- name: "term_ticker"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "term_ticker"
     parent: "basic_process_ctl"
  tasks:
  - block:
    - name: "Check if parent recipe failed"
      debug: msg="Check if parent recipe {{ parent }} failed"
      failed_when: terminate_recipe == true

    - name: "{{ recipe_name }}: Get the raft key values for peer0 in a loop with 3sec pause between iterations"
      vars:
        stage: "stage0"
        raft_keys:
            - "/raft_root_entry/0/term"
            - "/raft_root_entry/0/voted-for-uuid"
            - "/raft_root_entry/0/leader-uuid"
            - "/raft_root_entry/0/commit-idx"
            - "/raft_root_entry/0/last-applied"
            - "/raft_root_entry/0/last-applied-cumulative-crc"
            - "/raft_root_entry/0/state"
            - "/raft_root_entry/0/follower-reason"
            - "/raft_root_entry/0/client-requests"
            - "/raft_root_entry/0/peer-uuid"
        iter_info:
           iter: 5
           sleep_after_cmd: 3
        peer0_vals: "{{ lookup('niova_ctlrequest', 'lookup', Server0UUID, raft_keys, iter_info) }}"
      with_items:
        - "{{ peer0_vals }}"
      register: peer0_stats
      debug:
         msg: "Get different raft values for peer0: peer0_raft_values"

    - name: "{{ recipe_name }}: Verify stage0"
      vars:
        curr_itr_vals: "{{ peer0_stats['results'][item]['item'] }}"
        next_itr_vals: "{{ peer0_stats['results'][item + 1]['item']}}"
      debug:
         msg: "Compare term value: {{ curr_itr_vals }} with {{ next_itr_vals }}"
      no_log: true
      failed_when: >
        (curr_itr_vals["/0/term"] != next_itr_vals["/0/term"]) or
        (curr_itr_vals["/0/voted-for-uuid"] != curr_itr_vals["/0/voted-for-uuid"]) or
        (curr_itr_vals["/0/leader-uuid"] != "null") or
        (curr_itr_vals["/0/commit-idx"] != -1) or
        (curr_itr_vals["/0/last-applied"] != -1) or
        (curr_itr_vals["/0/last-applied-cumulative-crc"] != 0) or
        (curr_itr_vals["/0/state"] != "candidate-prevote") or
        (curr_itr_vals["/0/follower-reason"] != "leader-already-present") or
        (curr_itr_vals["/0/client-requests"] != "deny-leader-not-established")
      loop: "{{ range(0, 4)| list }}"

    - name: "{{ recipe_name }}: Get the term value before peer0 reboot"
      vars:
         stage: "stage1_before_reboot"
         peer0_term: "{{ lookup('niova_ctlrequest', 'lookup', Server0UUID, '/raft_root_entry/0/term') }}"
      with_items:
         - "{{ peer0_term }}"
      register: before_reboot_term
      debug:
        msg: "Got the term value of peer0: {{ Server0UUID }}"
      no_log: true

    - name: "{{ recipe_name }}: Kill the process"
      debug:
       msg: "{{lookup('niova_raftprocess', 'kill', Server0UUID)}}"
      no_log: True

    - name: "{{ recipe_name }}: Restart the peer0 process"
      debug:
       msg: "{{lookup('niova_raftprocess', 'start', Server0UUID)}}"
      no_log: True

    - name: "{{ recipe_name }}: Make sure raft timer thread is activated after starting the peer"
      vars:
         stage: "idle_off"
         cmd: "ignore_timer_events@false"
         where: "/raft_net_info/ignore_timer_events"
         idleoff: "{{ lookup('niova_ctlrequest', 'apply_cmd', Server0UUID, cmd, where) }}"
      debug:
        msg: "{{ idleoff }}"
      no_log: True

    - name: "{{ recipe_name }}: Get the term value after reboot"
      vars:
         stage: "stage1_after_reboot"
         after_reboot: "{{ lookup('niova_ctlrequest', 'lookup', Server0UUID, '/raft_root_entry/0/term') }}"
      debug:
        msg: "Get the peer0 term after reboot"
      with_items:
        - "{{ after_reboot }}"
      register: term_after_reboot

    - name: "{{ recipe_name }}: Verify stage1, term value should increment after reboot"
      vars:
          before_reboot: "{{ before_reboot_term['results'][0]['item'] }}" 
      debug:
         msg: "Compare before reboot term: {{ before_reboot_term['results'][0]['item']['/0/term'] }} with after reboot term: {{ term_after_reboot['results'][0]['item']['/0/term'] }}"
      failed_when: before_reboot["/0/term"] != term_after_reboot['results'][0]['item']["/0/term"]

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
