- import_playbook: basic_process_ctl.yml
- name: "term_ticker"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "term_ticker"
     parent: "basic_process_ctl"
     peer_idx: 0
  tasks:
    - name: "Verify stage 0 rule table"
      vars:
         ctlreq_cmd0:
            cmd: "get_all"
            recipe_name: "{{ recipe_name }}"
            peer_id: "{{ peer_idx }}"
            stage: "stage0"
            index: "{{ item }}"
            sleep_after: 2
         ctlreq_cmd1:
            cmd: "get_all"
            recipe_name: "{{ recipe_name }}"
            peer_id: "{{ peer_idx }}"
            stage: "stage0"
            index: "{{ item + 1 }}"
            sleep_after: 2
         term_key:
            - "/raft_root_entry/*/term"
         raft_keys:
            - "/raft_root_entry/*/term"
            - "/raft_root_entry/*/voted-for-uuid"
            - "/raft_root_entry/*/leader-uuid"
            - "/raft_root_entry/*/commit-idx"
            - "/raft_root_entry/*/last-applied"
            - "/raft_root_entry/*/last-applied-cumulative-crc"
            - "/raft_root_entry/*/state"
            - "/raft_root_entry/*/follower-reason"
            - "/raft_root_entry/*/client-requests"
            - "/raft_root_entry/*/peer-uuid"
      set_fact:
          raft_value="{{lookup('niova_plugin', 'lookup_create', recipe_params, ctlreq_cmd0, raft_keys, wantlist=True)}}"
          term="{{lookup('niova_plugin', 'lookup_create', recipe_params, ctlreq_cmd1, term_key, wantlist=True)}}"
      failed_when: >
        (term[0] < raft_value[0]) or
        (raft_value[1] != raft_value[9]) or
        (raft_value[2] != "null") or
        (raft_value[3] != "-1") or
        (raft_value[4] != "-1") or
        (raft_value[5] != "0") or
        (raft_value[6] != "candidate") or
        (raft_value[7] != "none") or
        (raft_value[8] != "deny-leader-not-established")
      loop: "{{ range(0, 5)| list }}"

    - name: "Copy get_all before killing process"
      vars:
         before_reboot_ctlreq_cmd:
            cmd: "get_all"
            wait_for_ofile: True
            recipe_name: "{{ recipe_name }}"
            peer_id: "{{ peer_idx }}"
            stage: "stage1_before_reboot"
      set_fact: raft_json="{{lookup('niova_plugin', 'ctlrequest', recipe_params, before_reboot_ctlreq_cmd, wantlist=True)}}"

    - name: "Kill the process"
      set_fact: kill_peer0="{{lookup('niova_plugin', 'raftprocess', recipe_params, peer_idx, "kill", wantlist=True)}}"

    - name: "Restart the process"
      set_fact: start_peer0="{{lookup('niova_plugin', 'raftprocess', recipe_params, peer_idx, "start", wantlist=True)}}"

    - name: "Idle off cmd"
      vars:
        ctlreq_cmd:
           cmd: "idle_off"
           wait_for_ofile: True
           recipe_name: "{{ recipe_name }}"
           peer_id: "{{ peer_idx }}"
           stage: "pre_stage1"
      set_fact: idle_off="{{lookup('niova_plugin', 'ctlrequest', recipe_params, ctlreq_cmd, wantlist=True)}}"

    - name: "Verify Stage1 rule table"
      vars:
         before_reboot_ctlreq_cmd:
            cmd: "get_all"
            wait_for_ofile: True
            recipe_name: "{{ recipe_name }}"
            peer_id: "{{ peer_idx }}"
            stage: "stage1_before_reboot"
            sleep_after: 4
         after_reboot_ctlreq_cmd:
            cmd: "get_all"
            wait_for_ofile: True
            recipe_name: "{{ recipe_name }}"
            peer_id: "{{ peer_idx }}"
            stage: "stage1_after_reboot"
         raft_key:
            - "/raft_root_entry/*/term"
      set_fact: 
          before_reboot="{{lookup('niova_plugin', 'lookup_create', recipe_params, before_reboot_ctlreq_cmd, raft_key, wantlist=True)}}"
          after_reboot="{{lookup('niova_plugin', 'lookup_create', recipe_params, after_reboot_ctlreq_cmd, raft_key, wantlist=True)}}"

      failed_when:
        before_reboot[0] >= after_reboot[0]
        
