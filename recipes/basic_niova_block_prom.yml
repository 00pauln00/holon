- name: "basic_niova_block_recipe"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "basic_niova_block_recipe"

  tasks:
  - block:
      # Check for the app_type
     - name: "{{ recipe_name }}: Check if the app_type is 'controlplane'."
       vars:
         app_type: "{{ app_type }}"
       debug:
         msg: "app_type is: {{ app_type }}"
       failed_when:
         (app_type != "controlplane")

     - name: generate new uuid
       shell: uuidgen
       register: nisdUUID

     - name: "{{ recipe_name }}: Start pmdb and proxy servers."
       include_role:
         name: common
         tasks_from: pmdb_cluster_init.yml
       vars:
         number_of_clients: "{{ nclients | int }}"
         number_of_PMDBServers: "{{ npeers | int }}"

     - name: generate new lookout-uuid
       shell: uuidgen
       register: lookoutUUID

     - name: "{{ recipe_name }}: Start niova-lookout process."
       vars:
         input_param: {
                 'lookout_uuid' :  '{{ lookoutUUID["stdout_lines"][0] }}',
                 'aport' : '4900',
                 'hport' : '9001',
                 'rport' : '4901',
                 'uport' : '2053',
                 }
       debug:
         msg: "{{ lookup('controlplane', 'niova-lookout', input_param, wantlist=true) }}"

     - pause:
         seconds: 2

     - name: "{{ recipe_name }}: Start niova-block-ctl process."
       vars:
          input_param: {
             'nisd_uuid': '{{ nisdUUID["stdout_lines"][0] }}',
             'nisd_dev_size': '21474836480',
             'lookout_uuid' :  '{{ lookoutUUID["stdout_lines"][0] }}'
              }
       debug:
         msg: "{{ lookup('nisd_handler', 'niova-block-ctl', input_param, wantlist=True) }}"

     - name: "{{ recipe_name }}: Start nisd process."
       vars:
         input_param: {
                  'nisd_uuid' : '{{ nisdUUID["stdout_lines"][0] }}',
                  'uport' : '1053',
                  'lookout_uuid' :  '{{ lookoutUUID["stdout_lines"][0] }}'
                  }
       debug:
         msg: "{{ lookup('nisd_handler', 'nisd', input_param, wantlist=True) }}"

     - pause:
         seconds: 2

     - name: Generate new vdev-uuid
       shell: "/usr/bin/uuid"
       register: vdevUUID

     - name: Generate new client-uuid for niova-block-test
       shell: "/usr/bin/uuid"
       register: blockTestClientUUID

     - name: "{{ recipe_name}}: Do write operation on nisd."
       vars:
         input_param: {
                 'uuid_to_write' : 'unix:{{ nisdUUID["stdout_lines"][0] }}',
                 'vdev' : '{{ vdevUUID.stdout }}',
                 'read_operation_ratio_percentage' : '0',
                 'random_seed' : '123',
                 'client_uuid' : '{{ blockTestClientUUID.stdout }}',
                 'request_size_in_bytes' : '16',
                 'queue_depth' : '1',
                 'num_ops' : '1000',
                 'lookout_uuid' :  '{{ lookoutUUID["stdout_lines"][0] }}'
                 }
       debug:
         msg: "{{ lookup('nisd_handler', 'niova-block-test', input_param, wantlist=True) }}"

    rescue:
     - name: "Recipe: {{ recipe_name }} failed"
       set_fact:
         terminate_recipe: true
