- import_playbook: pmdb_client_error_demonstration2.yml
- name: "PMDB Client Request Timeout Modification and Retry"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "pmdb_cli_req_tmo_mod_and_retry"
     parent: "pmdb_client_error_demonstration2"
     requirement: "pumicedb"
     client_obj: {}
  tasks:
  - block:
    - name: "Check if parent recipe failed"
      debug: msg="Check if parent recipe {{ parent }} failed"
      failed_when: terminate_recipe == true

    - name: "{{ recipe_name }}: Verifying recipe compatibility requirements."
      include_role:
         name: common
         tasks_from: recipe_compatibility_requirement

    - name: "{{ recipe_name }}: Get the list of all running peer UUIDs"
      include_role:
         name: common
         tasks_from: get_server_uuid_info

    - name: "{{ recipe_name }}: Get running peers."
      vars:
        all_running_servers: "{{ NRunningPeers }}"
      debug:
        msg: "Getting running peers."
      no_log: True
      with_items:
        - "{{ all_running_servers }}"
      register: get_running_peers

    - name: "{{ recipe_name }}: Get unused client uuid for starting the client"
      include_role:
        name: common
        tasks_from: get_new_client_uuid
      register: client_uuid

    - debug:
        msg:
          - "client uuid: {{ client_uuid.stdout }}"

    - name: "{{ recipe_name }}: Start the client"
      include_role:
         name: common
         tasks_from: start_client
      vars:
         ClientUUID: "{{ client_uuid.stdout }}"

    - name: "{{ recipe_name }}: Get Leader UUID."
      include_role:
         name: common
         tasks_from: get_follower_stats

    - name: "{{ recipe_name }}: Get leader's client-requests."
      vars:
        pcrtm_leader_uuid: "{{ LeaderUUID['/0/leader-uuid'] }}"
        stage: "stage1"
        raft_key:
            - "/raft_root_entry/0/client-requests"
        client_rqst: "{{ lookup('niova_ctlrequest', 'lookup', pcrtm_leader_uuid, raft_key, wantlist=True)[0] }}"
      debug:
        msg: "Getting client-requests from leader."
      no_log: True
      with_items:
        - "{{ client_rqst }}"
      register: stage1_value

    - name: "{{ recipe_name }}: Verify leader should accept client requests."
      vars:
        cli_rqst: "{{ stage1_value['results'][0]['item']['/0/client-requests'] }}"
      debug:
        msg:
        - "Verifying client-requests is {{ cli_rqst }} on leader."
      no_log: True
      failed_when: cli_rqst != "accept"

    - name: "{{ recipe_name }}: Disable recv on client from leader"
      vars:
        pcrtm_leader_uuid: "{{ LeaderUUID['/0/leader-uuid'] }}"
        stage: "disable_recv_from_leader"
        cmd: "net_recv_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ pcrtm_leader_uuid }}"
        disable_recv: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ disable_recv }}"

    - name: "{{ recipe_name }}: Apply different timeout values for client requests and observe the behavior."
      include_role:
         name: common
         tasks_from: client_request_timeout_verification
      vars:
        timeout_mod_client_uuid: "{{ client_uuid.stdout }}"
      with_items:
         - 2
         - 5
         - 10

    - name: "{{ recipe_name }}: Enable recv on client from leader"
      vars:
        pcrtm_leader_uuid: "{{ LeaderUUID['/0/leader-uuid'] }}"
        stage: "enable_recv_from_leader"
        cmd: "net_recv_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ pcrtm_leader_uuid }}"
        enable_recv: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ enable_recv }}"

    - name: "{{ recipe_name }}: After enabling recv from leader, Get client request from leader."
      vars:
        pcrtm_leader_uuid: "{{ LeaderUUID['/0/leader-uuid'] }}"
        stage: "stage3"
        raft_key:
            - "/raft_root_entry/0/client-requests"
        check_cli_rqst: "{{ lookup('niova_ctlrequest', 'lookup', pcrtm_leader_uuid, raft_key, wantlist=True)[0] }}"
      debug:
        msg: "After enabling net recv from leader, getting client-requests from leader."
      no_log: True
      with_items:
        - "{{ check_cli_rqst }}"
      register: stage3_value

    - name: "{{ recipe_name }}: Verify client request reported as 'accept'."
      vars:
        cli_rqst: "{{ stage3_value['results'][0]['item']['/0/client-requests'] }}"
      debug:
        msg:
        - "Verifying client-requests is {{ cli_rqst }} on leader."
      no_log: True
      failed_when: cli_rqst != "accept"

    - name: "{{ recipe_name }}: Lookup the object written by parent recipe."
      vars:
         stage: "lookup_stage"
         cmd: "input@{{ Demo2Rncui }}.lookup"
         where: "/pumice_db_test_client/input"
         lookup_obj: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ lookup_obj }}"
      no_log: True

    - name: "{{ recipe_name }}: Get pmdb-test-apps array values."
      vars:
        stage: "stage4"
        lookup_stage_keys:
            - "/pumice_db_test_client/pmdb-test-apps"
        check_pmdb_array: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, lookup_stage_keys, wantlist=True)[0] }}"
      debug:
        msg: "Access pmdb-test-apps array."
      no_log: True
      with_items:
        - "{{ check_pmdb_array }}"
      register: stage4_value

    - name: "{{ recipe_name }}: Validate pmdb-test-apps array values."
      vars:
        pmdb_array: "{{ stage4_value['results'][0]['item']['/pumice_db_test_client/pmdb-test-apps'] }}"
      debug:
        msg:
        - "Check pmdb-test-apps array: {{ pmdb_array }}."
      no_log: True
      failed_when: pmdb_array == "null"

    - name: "{{ recipe_name }}: Apply fault injection on the client to silently drop non-ping replies from the leader."
      vars:
         stage: "client_fault_injection"
         cmd: "enabled@true"
         where: "/fault_injection_points/name@raft_client_udp_recv_handler_process_reply_bypass"
         client_fault_injection: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ client_fault_injection }}"
      no_log: True

    - name: "{{ recipe_name }}: Verify leader is viable."
      include_role:
        name: common
        tasks_from: verify_leader_viable
      vars:
        ClientUUID: "{{ client_uuid.stdout }}"

    - name: "{{ recipe_name }}: Perform the lookup operation again on the same object"
      vars:
         stage: "lookup_stage"
         cmd: "input@{{ Demo2Rncui }}.lookup"
         where: "/pumice_db_test_client/input"
         lookup_op: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ lookup_op }}"
      no_log: True

    - name: "{{ recipe_name }}: Disable fault injection on the client."
      vars:
         stage: "remove_fault_injection"
         cmd: "enabled@false"
         where: "/fault_injection_points/name@raft_client_udp_recv_handler_process_reply_bypass"
         disable_fault_injection: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ disable_fault_injection }}"
      no_log: True

    - name: "{{ recipe_name }}: Verify that last-request-tag matches with tag in recent ops."
      vars:
        stage: "stage6_last_rqst"
        raft_keys:
            - "/pumice_db_test_client/pmdb-test-apps/0/last-request-tag"
            - "/pumice_db_test_client/pmdb-test-apps/0/status"
        check_recent_ops: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, raft_keys, wantlist=True)[0] }}"
      debug:
        msg: "Get the last-request-tag."
      no_log: True
      with_items:
        - "{{ check_recent_ops }}"
      register: stage6_value

    - name: "{{ recipe_name }}: Get the recent-ops-rd array"
      vars:
        stage: "stage_recent_ops"
        raft_keys:
            - "/raft_client_root_entry/0/recent-ops-rd"
        check_values: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, raft_keys, wantlist=True)[0] }}"
      debug:
        msg: "Access recent-ops-rd array."
      no_log: True
      with_items:
        - "{{ check_values }}"
      register: stage7_value

    - name: "{{ recipe_name }}: Get the last request from the recent ops array."
      vars:
        get_stage7: "{{ stage7_value['results'][0]['item'] }}"
      set_fact:
         Cli_Req_MoTo_attempts: "{{ get_stage7['/0/recent-ops-rd'][0]['attempts'] }}"
         Cli_Req_MoTo_rpc_user_tag: "{{ get_stage7['/0/recent-ops-rd'][0]['rpc-user-tag'] }}"
         Cli_Req_MoTo_completion_time: "{{ get_stage7['/0/recent-ops-rd'][0]['completion-time-ms'] }}"

    - name: "{{ recipe_name }}: Validate the last request from the recent ops array."
      vars:
        get_status: "{{ stage6_value['results'][0]['item']['/0/status'] }}"
        get_lrt: "{{ stage6_value['results'][0]['item']['/0/last-request-tag'] }}"
      debug:
        msg:
        - "{{ get_status }}"
        - "{{ get_lrt }}"
      no_log: True
      failed_when: >
        (get_status) != "Success" or
        ((get_lrt | int) != (Cli_Req_MoTo_rpc_user_tag | int)) or
        ((Cli_Req_MoTo_attempts | int) < 1) or
        ((Cli_Req_MoTo_completion_time | int) < 1000) and ((Cli_Req_MoTo_completion_time | int) > 2000)

    - name: "{{ recipe_name }}: Set the 'default-request-timeout-sec' to its default value (i.e.60)"
      vars:
         stage: "recipe_cleanup_stage"
         cmd: "default-request-timeout-sec@60"
         where: "/raft_client_root_entry/default-request-timeout-sec"
         default_timeout: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ default_timeout }}"
      no_log: True

    - name: "{{ recipe_name }}: Verify default request timeout set to '60'."
      vars:
        stage: "stage8_cleanup"
        raft_key:
            - "/raft_client_root_entry/0/default-request-timeout-sec"
        cleanup_stage: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, raft_key, wantlist=True)[0] }}"
      debug:
        msg: "Default timeout set to {{ cleanup_stage['/0/default-request-timeout-sec'] }}"
      no_log: True
      failed_when: cleanup_stage["/0/default-request-timeout-sec"] != 60

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
