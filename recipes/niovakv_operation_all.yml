- name: "niovakv_operation_all.yml"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "niovakv_operation_all"
    parent: None

  tasks:
  - block:
      # check for the app_type
     - name: "{{ recipe_name }}: Check if the app_type is 'niovakv'."
       vars:
         app_type: "{{ app_type }}"
       debug:
         msg: "app_type is: {{ app_type }}"
       failed_when:
         (app_type != "niovakv")

     - name: "{{ recipe_name }}: Start pmdb and proxy servers."
       include_role:
          name: common
          tasks_from: pmdb_cluster_init.yml
       vars:
         number_of_clients: 1
         number_of_PMDBServers: 5
  
     - name: "{{ recipe_name }}: Starting niovakv_client to write the value."
       vars:
         Operation: "write"
         Key: "Key"
         Value: "Value"
         OutfileName: "wrop"
         NumRequest: 1
         MultiKey: False
         Sequential : False
         nkvclires: "{{ lookup('niova_kvclient', Operation, Key, Value, OutfileName, NumRequest, MultiKey, Sequential, wantlist=True) }}"
       debug:
         msg: "Write key-value from niovakv_client."
       with_items:
          - "{{ nkvclires }}"
       register: writeres

     # check if write is successful
     - name: "{{ recipe_name }}: Check if write is successful"
       debug:
         msg: "Check if write is successful"
       failed_when: >
             writeres['results'][0]['item']['write'][0]['Response']['Status'] != 0

     - name: "{{ recipe_name }}: Starting niovakv_client to read the value."
       vars:
         Operation: "read"
         Key: "Key"
         Value: ""
         OutfileName: "rdop"
         NumRequest: 1
         MultiKey: False
         Sequential : False
         nkvclires: "{{ lookup('niova_kvclient', Operation, Key, Value, OutfileName, NumRequest, MultiKey, Sequential, wantlist=True) }}"
       debug:
         msg: "Read value from niovakv_client."
       with_items:
          - "{{ nkvclires }}"
       register: readres

     - name: "{{ recipe_name }}: compare values after sucessful write/read operation."
       vars:
         wrval: "{{ writeres['results'][0]['item']['write'][0]['Request'] }}"
         rdval: "{{ readres['results'][0]['item']['read'][0]['Response'] }}"
       debug:
         msg: "Verifying parameter after read operation"
       failed_when: >
        (rdval['Status'] != 0) or
        (rdval['Response'] != wrval['Value'])

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
          terminate_recipe: true

