- import_playbook: niova_block_test_with_multiple_nisd.yml
- name: "niova_block_gossip_info_check"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "niova_block_gossip_info_check"
    parent: "niova_block_test_with_multiple_nisd"

  tasks:
  - block:
      # check for the app_type
     - name: "{{ recipe_name }}: Check if the app_type is 'controlplane'."
       vars:
         app_type: "{{ app_type }}"
       debug:
         msg: "app_type is: {{ app_type }}"
       failed_when:
         (app_type != "controlplane")

     - name: "{{ recipe_name }}: get the list of non-running servers."
       include_role:
          name: common
          tasks_from: get_server_uuid_info

     - name: "{{ recipe_name }}: Get the leader and follower uuids."
       include_role:
         name: common
         tasks_from: get_follower_stats

     - name: "{{ recipe_name }}: Kill one of the lookout-process."
       debug:
         msg:  "{{ lookup('niova_raftprocess', 'kill', lookout_uuids[0], wantlist=True) }}"

     #- pause:
     #   seconds: 10

     - name: "{{ recipe_name }}: Wait until killed niova-lookout process's status gets changed."
       vars:
         input_param: {
                  'Key': '',
                  'Value': '',
                  'Operation': 'membership',
                  'IP_addr': '',
                  'Port': '',
                  'OutfileName': 'wait_for_lookoutStatus_{{ item }}'
                  }
       debug:
         msg: "{{ lookup('controlplane', 'ncpc', input_param, wantlist=True) }}"
       no_log : true
       loop: "{{ range(0, 10) | list }}"
       loop_control:
           pause: 1

     - name: "{{ recipe_name }}: Get killed niova-lookout gossip details."
       vars:
         input_param: {
                  'Key': '',
                  'Value': '',
                  'Operation': 'membership',
                  'IP_addr': '',
                  'Port': '',
                  'OutfileName': 'verify_lookout_status'
                  }
         killLookout: "{{ lookup('controlplane', 'ncpc', input_param, wantlist=True) }}"
       debug:
         msg: "Get killed lookout details."
       with_items:
          - "{{ killLookout }}"
       register: verifyKilledLookout

     - debug:
         msg: "{{ verifyKilledLookout }}"

     - name: "{{ recipe_name }}: Verify gosssip details of killed lookout process."
       vars:
         verifyStatus: "{{ verifyKilledLookout['results'][0]['item'][lookout_uuids[0]] }}"
       debug:
         msg:
          - "Verifying killed lookout process's status"
       failed_when: >
        (verifyStatus['Status'] != "failed")

     - name: "{{ recipe_name }}: Restart same niova-lookout process."
       vars:
         input_param: {
                 'lookout_uuid' :  '{{ lookout_uuids[0] }}',
                 'aport' : '4900',
                 'hport' : '9000',
                 'rport' : '5900',
                 'uport' : '1060'
                 }
       debug:
         msg:
          -  "{{ lookup('controlplane', 'niova-lookout', input_param, wantlist=true) }}"

     - pause:
         seconds: 5

     - name: "{{ recipe_name }}: Verify niova-lookout process's status is 'alive' now."
       vars:
         input_param: {
                  'Key': '',
                  'Value': '',
                  'Operation': 'membership',
                  'IP_addr': '',
                  'Port': '',
                  'OutfileName': 'verify_restarted_lookout_status'
                  }
         restartLookoutStatus: "{{ lookup('controlplane', 'ncpc', input_param, wantlist=True) }}"
       debug:
         msg: "Get restarted lookout process's gossip details"
       with_items:
          - "{{ restartLookoutStatus }}"
       register: verifyRestartLookout

     - debug:
         msg: "{{ verifyRestartLookout }}"

     - name: "{{ recipe_name }}: Verify gosssip details of lookout process which is restarted."
       vars:
         verifyStatus: "{{ verifyRestartLookout['results'][0]['item'][lookout_uuids[0]] }}"
       debug:
         msg:
          - "Verifying lookout process's status"
       failed_when: >
        (verifyStatus['Status'] != "alive")

     - name: Generate new NISD UUID
       shell: uuidgen
       register: newNisdUuid

     - debug:
         msg: "nisd-uuid: {{ newNisdUuid['stdout_lines'][0] }}"

     - name: "{{ recipe_name }}: Start niova-block-ctl process."
       vars:
         input_param: {
                  'nisd_uuid': '{{ newNisdUuid["stdout_lines"][0] }}',
                  'nisd_dev_size': '21474836480',
                  'lookout_uuid' :  '{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "{{ lookup('controlplane', 'niova-block-ctl', input_param, wantlist=True) }}"


     - name: "{{ recipe_name }}: Start new nisd process."
       vars:
         input_param: {
                  'nisd_uuid' : '{{ newNisdUuid["stdout_lines"][0] }}',
                  'uport' : '1060',
                  'lookout_uuid' :  '{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "{{ lookup('controlplane', 'nisd', input_param, wantlist=True) }}"

     - pause:
         seconds: 10


     - name: "{{ recipe_name }}: Get new nisd process's status is 'alive'."
       vars:
         input_param: {
                  'Key': '',
                  'Value': '',
                  'Operation': 'membership',
                  'IP_addr': '',
                  'Port': '',
                  'OutfileName': 'verify_new_nisd_status'
                  }
         newlyStartedNisd: "{{ lookup('controlplane', 'ncpc', input_param, wantlist=True) }}"
       debug:
         msg: "Get newly started nisd's gossip details"
       with_items:
          - "{{ newlyStartedNisd }}"
       register: verifyNewNisd

     - debug:
         msg: "{{ verifyNewNisd }}"

     - name: "{{ recipe_name }}: Verify gosssip details of newly started nisd process."
       vars:
         verifyStatus: "{{ verifyNewNisd['results'][0]['item'][lookout_uuids[0]]['Tags'] }}"
       debug:
         msg:
          - "Verifying newly started nisd process's status"
       failed_when: >
        (verifyStatus[nisd_uuids[1]] != "Alive")

     - name: "{{ recipe_name }}: Kill one of the nisd process."
       debug:
         msg:  "{{ lookup('niova_raftprocess', 'kill', nisd_uuids[1], wantlist=True) }}"

     - pause:
        seconds: 10

     - name: "{{ recipe_name }}: Verify nisd process's status is 'Dead'."
       vars:
         input_param: {
                  'Key': '',
                  'Value': '',
                  'Operation': 'membership',
                  'IP_addr': '',
                  'Port': '',
                  'OutfileName': 'verify_killed_nisd_status'
                  }
         killNisd: "{{ lookup('controlplane', 'ncpc', input_param, wantlist=True) }}"
       debug:
         msg: "Get killed nisd process's gossip details"
       with_items:
          - "{{ killNisd }}"
       register: verifyKilledNisd

     - debug:
         msg: "{{ verifyKilledNisd }}"

     - name: "{{ recipe_name }}: Verify gosssip details of killed nisd process."
       vars:
         verifyStatus: "{{ verifyKilledNisd['results'][0]['item'][lookout_uuids[0]]['Tags'] }}"
       debug:
         msg:
          - "Verifying killed nisd process's status"
       failed_when: >
        (verifyStatus[nisd_uuids[1]] != "Dead")

    rescue:
     - name: "Recipe: {{ recipe_name }} failed"
       set_fact:
         terminate_recipe: true



