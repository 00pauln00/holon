- name: "gc_overwrittenVblks_less_than_8GB"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "gc_overwrittenVblks_less_than_8GB"
     parent: None

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "/local/minio_data"
      debug:
         msg:
          - "{{ lookup('obj_storage', 'minio', 'start', s3_dir, wantlist=True) }}"
      when: s3Support == "true"

    - name: "Generate DBIs with vblk entry"
      vars:
        dgen_args: {
                  "chunk": "2",
                  "maxPunches": "20",
                  "maxVblks": "256",
                  "punchAmount": "100",
                  "punchesPer": "0",
                  "maxPunchSize": "20",
                  "seed": "123",
                  "seqStart": "0",
                  "vbAmount": "250",
                  "vblkPer": "100",
                  "genType": "1",
                  "blockSize": "8",
                  "blockSizeMax": "32",
                  "startVblk": "0",
                  "vdev": "26b26faa-e5af-11ee-802e-22abb648e432",
        }
        params: {
                  "total_chunks" : 1,
                  "is_random" : false,
                  "remove_files": false,
        }
      debug:
         msg:
          - "{{ lookup('data_gen', 'generator', dgen_args, params, wantlist=True) }}"

    - name: "{{ recipe_name }}: Start GCService"
      vars:
        params: {
          "dry_run": false,
          "del_dbo": true,
          "partition": false,
          "total_chunks": 0,
          "force_gc": false,
        }
      debug:
         msg:
          - "{{ lookup('garbage_collection', 'daemon', 'start', params, wantlist=True) }}"

    - name: "{{ recipe_name }}: pause for 1 seconds."
      pause:
        seconds: 1

    - name: "Second iteration DBIs"
      vars:
        dgen_args: {
                  "chunk": "2",
                  "maxPunches": "20",
                  "maxVblks": "256",
                  "punchAmount": "100",
                  "punchesPer": "0",
                  "maxPunchSize": "20",
                  "seed": "123",
                  "seqStart": "",
                  "vbAmount": "250",
                  "vblkPer": "100",
                  "genType": "1",
                  "blockSize": "8",
                  "blockSizeMax": "32",
                  "startVblk": "0",
                  "vdev": "26b26faa-e5af-11ee-802e-22abb648e432",
        }
        params: {
                  "total_chunks" : 1,
                  "is_random" : false,
                  "remove_files": false,
        }
      debug:
         msg:
          - "{{ lookup('data_gen', 'generator', dgen_args, params, wantlist=True) }}"

    - name: "{{ recipe_name }}: Check GC Marker file is Present or not."
      vars:
        params: {
          "chunk": "2",
        }
      debug:
         msg:
          - "{{ lookup('obj_storage', 'get_markers', params, wantlist=True) }}"
      register: marker_check

    - name: "{{ recipe_name }}: Validate that GC Marker file is Present."
      debug:
        msg: "Validate that GC is not processed for vdev and chunk as space saved cost is less that cost of APIs"
      failed_when: marker_check.msg is defined and marker_check.msg[0] | selectattr('!=', 'none') | length > 0

    - name: "{{ recipe_name }}: Check NISD and GC Marker file End sequence."
      vars:
        params: {
          "chunk": "2",
        }
      debug:
         msg: "{{ lookup('obj_storage', 'get_markers', params, wantlist=True) }}"
      register: marker_check

    - name: "{{ recipe_name }}: Validate that NISD and GC Marker file's endSeq doesn't match."
      debug:
        msg: "Validate that GC is not processed and Marker file's endSeq doesn't match  {{ marker_check.msg[1] }} and {{ marker_check.msg[0] }} "
      failed_when: marker_check.msg[1] == marker_check.msg[0]

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
