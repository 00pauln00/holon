- import_playbook: basic_raft_operation_with_client_activity.yml
  when: ClusterParams['ctype'] == "pumicedb"

- name: "prevote_raft_guarantee_liveness"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "prevote_raft_guarantee_liveness"
     parent: "basic_raft_ops_w_client_act"
     requirement: "pumicedb"
     num_writes: 100

  tasks:
  - block:
    - name: "{{ recipe_name }}: Check if parent recipe failed"
      debug: msg="Check if parent recipe {{ parent }} failed"
      failed_when: terminate_recipe == true

    - name: "{{ recipe_name }}: Verify the holon started with pumicedb cluster"
      include_role:
        name: common
        tasks_from: recipe_compatibility_requirement

    - name: "{{ recipe_name }}: Get the cluster information."
      include_role:
         name: common
         tasks_from: get_server_uuid_info

    - name: "{{ recipe_name }}: Get all raft root entry key-value."
      include_role:
        name: common
        tasks_from: get_all_values_from_all_peers

    - name: "{{ recipe_name }}: Get cluster information."
      include_role:
        name: common
        tasks_from: get_follower_stats

    #Prepare list for different peers to disable.
    - set_fact: server4="{{ FollowerUUIDs |  random }}"
    - set_fact: server5="{{ FollowerUUIDs  | difference(server4) | random }}"
    - set_fact: disablePeers="{{ [] + [server4] + [server5] }}"
    - set_fact: server2="{{ FollowerUUIDs | difference(disablePeers) | random }}"

    - name: "{{ recipe_name }}: Print UUID for server 4 and server 5."
      debug:
        msg: "{{ disablePeers }}"

    - name: "{{ recipe_name }}: Prepare list for disable peers from server 4."
      vars:
        getlist: "{{ FollowerUUIDs | difference(server2) }}"
        addleader: "{{ getlist | difference(server4) }}"
      set_fact:
        disablePeersfrmserver4: "{{ addleader + [LeaderUUID[0]['/0/leader-uuid']] }}"

    - debug:
        msg: "Peers which are disabled from server 4: {{ disablePeersfrmserver4 }}"

    - name: "{{ recipe_name }}: Prepare list for disable peers from server 5."
      set_fact:
         disablePeersfrmserver5: "{{ FollowerUUIDs | difference(server5) }}"

    - debug:
        msg: "Peers which are disabled from server 5: {{ disablePeersfrmserver5 }}"

    - name: "{{ recipe_name }}: Disable Msg(Recv) from server 4 to other peers except server 2."
      vars:
        stage: "disable_msg_recv"
        cmd: "net_recv_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ disablePeersfrmserver4[item] }}"
        disfrmPeer4: "{{ lookup('niova_ctlrequest', 'apply_cmd', server4, cmd, where, wantlist=True) }}"
      debug:
        msg: "Disable net_recv_enabled from server 4c {{ disfrmPeer4 }}"
      no_log: True
      loop: "{{ range(0, disablePeersfrmserver4 | length) | list }}"
      loop_control:
        pause: 1

    - name: "{{ recipe_name }}: Verify ctl_svc_nodes for server 4."
      include_role:
         name: common
         tasks_from: verify_ctl_svc_nodes
      vars:
        DisconnectedPeer: "{{ server4 }}"
        DisablePeerList: "{{ disablePeersfrmserver4[idx] }}"
      loop: "{{ range(0, disablePeersfrmserver4 | length) | list }}"
      loop_control:
          loop_var: idx
      no_log: True

    - name: "{{ recipe_name }}: Disable message rcv from server 5 to followers except leader."
      vars:
         stage: "disable_netrcv_peer5"
         cmd: "net_recv_enabled@false"
         where: "/ctl_svc_nodes/uuid@{{ disablePeersfrmserver5[item] }}"
         disfrmPeer5: "{{ lookup('niova_ctlrequest', 'apply_cmd', server5, cmd, where, wantlist=True) }}"
      debug:
        msg: "Disable net_recv_enabled from server 5 {{ disfrmPeer5 }}"
      no_log: True
      loop: "{{ range(0, disablePeersfrmserver5 | length) | list }}"
      loop_control:
        pause: 1

    - name: "{{ recipe_name }}: Verify ctl_svc_nodes for server 5."
      include_role:
         name: common
         tasks_from: verify_ctl_svc_nodes
      vars:
        DisconnectedPeer: "{{ server5 }}"
        DisablePeerList: "{{ disablePeersfrmserver5[itr] }}"
      loop: "{{ range(0, disablePeersfrmserver5 | length) | list }}"
      loop_control:
          loop_var: itr

    - name: "{{ recipe_name }}: Get the state from server 4."
      vars:
         stage: "verifyState"
         raft_keys:
              - "/raft_root_entry/0/state"
      set_fact:
         verifyServer4State: "{{ lookup('niova_ctlrequest', 'lookup', server4, raft_keys, wantlist=true)[0] }}"
      failed_when: verifyServer4State["/0/state"] != "candidate-prevote"

    - name: "{{ recipe_name }}: Prepare list of connected peers i.e. server 1, 2 and 3."
      vars:
        rmPeer4: "{{ FollowerUUIDs | difference(server4) }}"
        rmPeer5: "{{ rmPeer4 | difference(server5) }}"
      set_fact:
        connectedPeers: "{{ rmPeer5 + [LeaderUUID[0]['/0/leader-uuid']] }}"

    - name: "{{ recipe_name }}: Get term value from server 1, 2 and 3."
      vars:
         stage: "verifyConnectedPeers"
         raft_keys:
              - "/raft_root_entry/0/term"
              - "/raft_root_entry/0/leader-uuid"
              - "/raft_root_entry/0/state"
              - "/raft_root_entry/0/commit-idx"
         peer_values: "{{ lookup('niova_ctlrequest', 'lookup', connectedPeers, raft_keys, wantlist=true)[0] }}"
      debug:
        msg: "Get term values from server 1, 2 and 3"
      with_items:
        - "{{ peer_values }}"
      register: origInfo
      no_log: True

    - name: "{{ recipe_name }}: Verify leader, term, state for server 1, 2 and 3."
      vars:
        term_prev: "{{ origInfo['results'][item]['item']['/0/term'] }}"
        term_next: "{{ origInfo['results'][item + 1]['item']['/0/term'] }}"
        commitIdx_prev: "{{ origInfo['results'][item]['item']['/0/commit-idx'] }}"
        commitIdx_next: "{{ origInfo['results'][item + 1]['item']['/0/commit-idx'] }}"
      debug:
        msg: "Verify values for peer."
      failed_when: >
          (origInfo['results'][item]['item']["/0/leader-uuid"] != LeaderUUID[0]["/0/leader-uuid"]) or
          (term_prev != term_next) or
          (commitIdx_prev != commitIdx_next) or
          ((origInfo['results'][item]['item']["/0/state"] != "leader") and
          (origInfo['results'][item]['item']["/0/state"] != "follower"))
      loop: "{{ range(0, connectedPeers | length - 1) | list }}"

    - name: "{{ recipe_name }}: Get unused client uuid for starting the client"
      include_role:
        name: common
        tasks_from: get_new_client_uuid
      register: client_uuid

    - debug:
        msg: "Client UUID: {{ client_uuid.stdout }}"

    - name: "{{ recipe_name }}: Generate App UUID."
      shell: "/usr/bin/uuid"
      register: appUUID

    - name: "{{ recipe_name }}: Start the client."
      include_role:
         name: common
         tasks_from: start_client
      vars:
        ClientUUID: "{{ client_uuid.stdout }}"

      # Disable send on client from the peer4
    - name: "{{ recipe_name }}: Disable send on client from the peer4."
      vars:
        stage: "disable_send_peers_mode_client"
        cmd: "net_send_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ server4 }}"
        disable_mode_send_client: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ disable_mode_send_client }}"
      no_log: True

      # Disable recv on client from the peer4
    - name: "{{ recipe_name }}: Disable recv on all peers from the peer4."
      vars:
        stage: "disable_recv_peers_mode_client"
        cmd: "net_recv_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ server4 }}"
        disable_mode_send_client: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ disable_mode_send_client }}"
      no_log: True

    - name: "{{ recipe_name }}: Verify leader is viable."
      include_role:
        name: common
        tasks_from: verify_leader_viable
      vars:
        ClientUUID: "{{ client_uuid.stdout }}"

      # Get client info
    - name: "{{ recipe_name}}: Get the parameters for client."
      vars:
        stage: "stage1"
        raft_keys:
          - "/raft_client_root_entry/0/leader-viable"
          - "/raft_client_root_entry/0/last-request-sent"
          - "/raft_client_root_entry/0/last-request-ack"
          - "/raft_client_root_entry/0/raft-uuid"
          - "/raft_client_root_entry/0/state"
          - "/raft_client_root_entry/0/leader-uuid"
        cli_vals: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, raft_keys, wantlist=True)[0] }}"
      debug:
        msg: "Get the values for client"
      with_items:
        - "{{ cli_vals }}"
      register: client_values
      no_log: True

    - name: "{{ recipe_name }}: leader remains same for client as well"
      vars:
        clientLeader: "{{ client_values['results'][0]['item']['/0/leader-uuid'] }}"
        actualLeader: "{{ LeaderUUID[0]['/0/leader-uuid'] }}"
      debug:
        msg: "Verify leader remains same"
      failed_when: >
          ( clientLeader != actualLeader)

    - name: "{{ recipe_name}}: Write at seqno 0 and perform the write {{ num_writes }} times."
      vars:
        stage: "write"
        cmd: "input@{{ appUUID.stdout }}:0:0:0:0.write:0.{{ num_writes }}"
        where: "/pumice_db_test_client/input"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"

    - name: "{{ recipe_name}}: Wait until write completes from client"
      vars:
        stage: "wait_for_write_op"
        raft_key: "/pumice_db_test_client/pmdb-test-apps/0/pmdb-seqno"
      debug:
        msg: "Waiting for client to finish writing"
      until: lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, raft_key, wantlist=True)[0]['/0/pmdb-seqno'] == (num_writes - 1)
      retries: 100
      delay: 1

    - name: "{{ recipe_name}}: Wait until commit-idx gets incremented on all peers except server 4."
      vars:
        getPeersExceptServer4: "{{ NRunningPeers | difference(server4) }}"
        stage: "wait_for_commitId"
        raft_key: "/raft_root_entry/0/commit-idx"
      debug:
        msg: "Wait until commit-idx gets incremented"
      until: lookup('niova_ctlrequest', 'lookup', getPeersExceptServer4[item], raft_key, wantlist=True)[0]['/0/commit-idx'] == (get_values_from_all[0][item]['/0/commit-idx'] + num_writes)
      retries: 100
      delay: 1
      loop: "{{ range(0, getPeersExceptServer4 | length) | list }}"

    - name: "{{ recipe_name }}: Get the all values after num_writes from all peers except server 4."
      vars:
         stage: "verifyCommitindex"
         getPeersExceptServer4: "{{ NRunningPeers | difference(server4) }}"
         raft_keys:
             - "/raft_root_entry/0/leader-uuid"
             - "/raft_root_entry/0/term"
             - "/raft_root_entry/0/commit-idx"
         peer_values: "{{ lookup('niova_ctlrequest', 'lookup', getPeersExceptServer4, raft_keys, wantlist=true)[0] }}"
      debug:
        msg: "Get all values from all peers."
      with_items:
        - "{{ peer_values }}"
      register: getAllVal
      no_log: True

    - name: "{{ recipe_name }}: After successful write operation, verify all values same on other peers except server 4."
      vars:
        getPeersExceptServer4: "{{ NRunningPeers | difference(server4) }}"
        curr_val: "{{ getAllVal['results']}}"
      debug:
        msg: "Verify values for all peers excluding server 4"
      failed_when: >
          (curr_val[item]['item']['/0/leader-uuid'] != get_values_from_all[0][item]['/0/leader-uuid']) or
          (curr_val[item]['item']['/0/term'] != get_values_from_all[0][item]['/0/term']) or
          (curr_val[item]['item']['/0/commit-idx'] != get_values_from_all[0][item]['/0/commit-idx'] + num_writes)
      loop: "{{ range(0, getPeersExceptServer4 | length) | list }}"

    - name: "{{ recipe_name }}: Verify the write operation should not happen to server 4."
      vars:
         stage: "verifyCommitIdAftrWrite"
         raft_keys:
              - "/raft_root_entry/0/commit-idx"
      set_fact:
         verifyCommitIdx: "{{ lookup('niova_ctlrequest', 'lookup', server4, raft_keys, wantlist=true)[0] }}"
      failed_when: verifyCommitIdx["/0/commit-idx"] == getAllVal['results'][0]['item']["/0/commit-idx"]

    - name: "{{ recipe_name }}: Enable Msg(Recv) from server 4 to other peers except server 2."
      vars:
        stage: "enable_msg_recv"
        cmd: "net_recv_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ disablePeersfrmserver4[item] }}"
        enfrmPeer4: "{{ lookup('niova_ctlrequest', 'apply_cmd', server4, cmd, where, wantlist=True) }}"
      debug:
        msg: "Enable net_recv_enabled from server 4 {{ enfrmPeer4 }}"
      no_log: True
      loop: "{{ range(0, disablePeersfrmserver4 | length) | list }}"
      loop_control:
        pause: 1

    - name: "{{ recipe_name }}: Verify ctl_svc_nodes for server 4."
      include_role:
         name: common
         tasks_from: enable_net_recv
      vars:
        DisconnectedPeer: "{{ server4 }}"
        DisablePeerList: "{{ disablePeersfrmserver4[idx] }}"
      loop: "{{ range(0, disablePeersfrmserver4 | length) | list }}"
      loop_control:
          loop_var: idx

    - name: "{{ recipe_name }}: Enable message rcv from server 5 to followers except leader."
      vars:
         stage: "enable_netrcv_peer5"
         cmd: "net_recv_enabled@true"
         where: "/ctl_svc_nodes/uuid@{{ disablePeersfrmserver5[item] }}"
         enfrmPeer5: "{{ lookup('niova_ctlrequest', 'apply_cmd', server5, cmd, where, wantlist=True) }}"
      debug:
        msg: "Enable net_recv_enabled from server 5 {{ enfrmPeer5 }}"
      no_log: True
      loop: "{{ range(0, disablePeersfrmserver5 | length) | list }}"
      loop_control:
        pause: 1

    - name: "{{ recipe_name }}: Verify ctl_svc_nodes for server 5."
      include_role:
         name: common
         tasks_from: enable_net_recv
      vars:
        DisconnectedPeer: "{{ server5 }}"
        DisablePeerList: "{{ disablePeersfrmserver5[itr] }}"
      loop: "{{ range(0, disablePeersfrmserver5 | length) | list }}"
      loop_control:
          loop_var: itr

    - name: "{{ recipe_name }}: Get the commi-idx, term and leader-uuid after enabling the 'net_recv_enabled'."
      vars:
         stage: "verifyAllPeers"
         raft_keys:
             - "/raft_root_entry/0/leader-uuid"
             - "/raft_root_entry/0/commit-idx"
             - "/raft_root_entry/0/term"
             - "/raft_root_entry/0/state"
         peer_values: "{{ lookup('niova_ctlrequest', 'lookup', NRunningPeers, raft_keys, wantlist=true)[0] }}"
      debug:
        msg: "Get all values from all peers."
      with_items:
        - "{{ peer_values }}"
      register: getAllPeerVal

    - name: "{{ recipe_name }}: Verify the commit-idx, term and leader-uuid of all peers including server 4."
      debug:
        msg: "Verify values for all running peers."
      failed_when: >
          (getAllPeerVal['results'][item]['item']['/0/leader-uuid'] != get_values_from_all[0][item]['/0/leader-uuid']) or
          (getAllPeerVal['results'][item]['item']['/0/term'] != get_values_from_all[0][item]['/0/term']) or
          (getAllPeerVal['results'][item]['item']['/0/commit-idx'] != (get_values_from_all[0][item]['/0/commit-idx'] + num_writes)) or
          ((getAllPeerVal['results'][item]['item']['/0/state'] != "leader") and
          (getAllPeerVal['results'][item]['item']['/0/state'] != "follower"))
      loop: "{{ range(0, NRunningPeers | length) | list }}"

      # Disable send on client from the peer4
    - name: "{{ recipe_name }}: Enable send on client from the peer4."
      vars:
        stage: "disable_send_peers_mode_client"
        cmd: "net_send_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ server4 }}"
        disable_mode_send_client: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ disable_mode_send_client }}"
      no_log: True

      # Disable recv on client from the peer4
    - name: "{{ recipe_name }}: Enable recv on all peers from the peer4."
      vars:
        stage: "disable_recv_peers_mode_client"
        cmd: "net_recv_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ server4 }}"
        disable_mode_send_client: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ disable_mode_send_client }}"
      no_log: True

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true

