- name: "gc_space_saved_cost_less_than_cost_of_costAPI"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "gc_space_saved_cost_less_than_cost_of_costAPI"
     parent: None

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "minio_data"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_s3', s3_dir, wantlist=True) }}"
      when: s3Support == "true"

    - name: "Generate DBIs with vblk entry"
      vars:
        input_param: {
                  "chunk": "1",
                  "maxPunches": "20",
                  "maxVblks": "256",
                  "punchAmount": "100",
                  "punchesPer": "0",
                  "maxPunchSize": "20",
                  "seed": "1",
                  "seqStart": "0",
                  "vbAmount": "100",
                  "vblkPer": "10",
                  "genType": "1",
                  "blockSize": "8",
                  "blockSizeMax": "32",
                  "startVblk": "0",
                  "strideWidth": "",
                  "overlapSeq": "",
                  "numOfSet": "",
                  "vdev": "26b26faa-e5af-11ee-802e-22abb648e432",
                  "s3configPath": "",
                  "punchwholechunk": "false",
        }
      debug:
         msg:
          - "{{ lookup('s3_handler', 'example_params', input_param, wantlist=True) }}"

    - name: "{{ recipe_name }}: Start GCService"
      vars:
        dryRun: False
        delDBO: True
        partition: False
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_gcService', dryRun, delDBO, partition, wantlist=True) }}"

    - name: "{{ recipe_name }}: Check GC Marker file is Present or not."
      vars:
        Chunk: "1"
        mType: "Both"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'GetSeqOfMarker', mType, Chunk, wantlist=True) }}"
      register: marker_check

    - name: "{{ recipe_name }}: Validate that GC Marker file is Present."
      debug:
        msg: "Validate that GC is not processed for vdev and chunk as space saved cost is less that cost of APIs {{ marker_check.msg[0] }}"
      failed_when: marker_check.msg is defined and marker_check.msg[0] | selectattr('!=', 'none') | length > 0

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
