- name: "basic_leader_timestamp"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_leader_timestamp"
     parent: None

  tasks:
  - block:

    - name: "{{ recipe_name }}: Get the non-running peers list to select first peer to start"
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "Start 5 peers in the cluster"
      include_role:
        name: common
        tasks_from: start_server
      vars:
        ServerUUID: "{{ NonRunningServers[item] }}"
      loop: "{{ range(0, NonRunningServers | length) | list }}"

    - name: "{{ recipe_name }}: Get the running peers list."
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "{{ recipe_name }}: Wait until leader election happens."
      vars:
         stage: "wait_leader_election"
      debug:
        msg: "Waiting for leader election"
      until: lookup('niova_ctlrequest', 'lookup', NRunningPeers[item], '/raft_root_entry/0/leader-uuid', wantlist=True)| dict2items | map(attribute='value') | list | first != "null"
      retries: 10
      delay: 1
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    - name: "{{ recipe_name }}: Get cluster information"
      include_role:
        name: common
        tasks_from: get_follower_stats

    - name: "{{ recipe_name }}: Get the raft values for all running peers"
      vars:
         stage: "stage0_get_all"
         raft_keys:
            - "/raft_root_entry/0/leader-uuid"
            - "/raft_root_entry/0/term"
            - "/raft_root_entry/0/leader-time"
         peers_val: "{{ lookup('niova_ctlrequest', 'lookup', LeaderUUID['/0/leader-uuid'], raft_keys, wantlist=True) }}"
      debug:
        msg: "Getting stats for all running peers: {{ peers_val }}"
      #no_log: true
      with_items:
         - "{{ peers_val }}"
      register: stage0_peers_vals

    - name: "Verify leader-time in each iteration"
      include_role:
        name: common
        tasks_from: verify_leader_time
      vars:
        leader_UUID: "{{ LeaderUUID['/0/leader-uuid'] }}"
        no_of_iter: 10
        sleep_time: 3

    - name: "{{ recipe_name }}: Store leader-uuid for new Leader"
      vars:
         old_leader: "{{ LeaderUUID['/0/leader-uuid'] }}"
      debug:
        msg: "Old Leader UUID"
      #no_log: true
      with_items:
         - "{{ old_leader }}"
      register: orig_leader

    - name: "{{ recipe_name }}: Kill the Leader."
      debug:
        msg: "{{ lookup('niova_raftprocess', 'kill', orig_leader['results'][0]['item'], wantlist=True) }}"

    - name: "{{ recipe_name }}: Get the running peers list."
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "{{ recipe_name }}: Again wait until new leader election happens."
      vars:
         stage: "wait_for_new_leader_election"
      debug:
        msg: "Waiting for leader election"
      until: lookup('niova_ctlrequest', 'lookup', NRunningPeers[item], '/raft_root_entry/0/leader-uuid', wantlist=True)| dict2items | map(attribute='value') | list | first != "null"
      retries: 10
      delay: 1
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    - name: "{{ recipe_name }}: Get cluster information"
      include_role:
        name: common
        tasks_from: get_follower_stats

    - name: "{{ recipe_name }}: Store term and leader-time for new Leader"
      vars:
         stage: "get_vals_for_new_leader"
         raft_keys:
            - "/raft_root_entry/0/leader-uuid"
            - "/raft_root_entry/0/term"
            - "/raft_root_entry/0/leader-time"
         new_leader_val: "{{ lookup('niova_ctlrequest', 'lookup', LeaderUUID['/0/leader-uuid'], raft_keys, wantlist=True) }}"
      debug:
        msg: "Getting stats for all running peers: {{ new_leader_val }}"
      #no_log: true
      with_items:
         - "{{ new_leader_val }}"
      register: stage1_vals

    - debug:
        msg: "Verify term should increase"
      failed_when: >
        ((stage1_vals['results'][0]['item']['/0/leader-time']|float) >= (stage0_peers_vals['results'][0]['item']['/0/leader-time']|float)) or
        (stage1_vals['results'][0]['item']['/0/term'] <= stage0_peers_vals['results'][0]['item']['/0/term'])

    - name: "Safe Restart the Old Leader"
      debug:
        msg: "{{lookup('niova_raftprocess', 'start', orig_leader['results'][0]['item'], wantlist=True)}}"

    - name: "{{ recipe_name }}: Verify leader-time"
      vars:
         stage: "again_check_leader_time"
         raft_keys:
            - "/raft_root_entry/0/leader-uuid"
            - "/raft_root_entry/0/term"
            - "/raft_root_entry/0/leader-time"
         stage2_vals: "{{ lookup('niova_ctlrequest', 'lookup', LeaderUUID['/0/leader-uuid'], raft_keys, wantlist=True) }}"
      debug:
        msg: "Verify leader-time is incremented"
      failed_when: >
        ((stage2_vals['/0/leader-time'] | float) <= (stage1_vals['results'][0]['item']['/0/leader-time'] | float)) or
        (stage2_vals['/0/term'] != stage1_vals['results'][0]['item']['/0/term'])

    rescue:
     - name: "Recipe: {{ recipe_name }} failed"
       set_fact:
         terminate_recipe: true
