- name: "basic_lease_operation_all"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_lease_operation_all"
     parent: None

  tasks:
  - block:
    - name: "{{ recipe_name }}: Get the non-running peers list to select first peer to start"
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "Start 5 peers in the cluster"
      include_role:
        name: common
        tasks_from: start_server
      vars:
        ServerUUID: "{{ NonRunningServers[item] }}"
      loop: "{{ range(0, NonRunningServers | length) | list }}"

    - name: "{{ recipe_name }}: Get the running peers list."
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: Generate new resource
      shell: "/usr/bin/uuid"
      register: resourceUUID

    - name: Generate new client
      shell: "/usr/bin/uuid"
      register: clientUUID

    - name: "{{ recipe_name }}: Perform 'get_lease' operation."
      vars:
         input_param: {
                'client': '{{ clientUUID.stdout }}',
                'resource': '{{ resourceUUID.stdout }}',
                'outFileName': 'get_lease_{{ resourceUUID.stdout }}'
                 }
      debug:
         msg: "{{ lookup('lease_feature', 'get_lease', input_param, wantlist=True) }}"

    - name: "{{ recipe_name }}: Perform 'lookup_lease' operation."
      vars:
         input_param: {
                'resource': '{{ resourceUUID.stdout }}',
                'outFileName': 'lookup_lease_{{ resourceUUID.stdout }}'
                 }
      debug:
         msg: "{{ lookup('lease_feature', 'lookup_lease', input_param, wantlist=True) }}"

    - name: "{{ recipe_name }}: Perform 'refresh_lease' operation."
      vars:
         input_param: {
                'client': '{{ clientUUID.stdout }}',
                'resource': '{{ resourceUUID.stdout }}',
                'outFileName': 'refresh_lease_{{ resourceUUID.stdout }}'
                 }
      debug:
         msg: "{{ lookup('lease_feature', 'refresh_lease', input_param, wantlist=True) }}"

    - name: "{{ recipe_name }}: Start niova-block-ctl process."
      vars:
          input_param: {
             'nisd_dev_size': '68719476736',
             'lookout_uuid': '',
             'alt_name': 'nisd{{item}}'
              }
      set_fact:
         get_nisd: "{{ lookup('nisd_handler', 'niova-block-ctl', input_param, wantlist=True) }}"
      loop: "{{ range(0, nnisds | int) }}"
      #no_log: True

    - name: "{{ recipe_name }}: Start nisd process."
      vars:
         input_param: {
                  'nisd_uuid' : '{{ get_nisd }}',
                  'uport' : '1053',
                  'lookout_uuid': ''
                  }
      debug:
         msg: "{{ lookup('nisd_handler', 'nisd', input_param, wantlist=True) }}"
      #no_log: True

    - pause:
        seconds: 2

    - name: "{{ recipe_name }}: Perform some Writes to the NISD."
      vars:
         input_param: {
                 'nisd_uuid_to_write' : 'unix:{{ get_nisd }}',
                 'vdev' : '{{ resourceUUID.stdout }}',
                 'read_operation_ratio_percentage' : '0',
                 'random_seed' : '123',
                 'client_uuid' : '{{ clientUUID.stdout }}',
                 'request_size_in_bytes' : '32',
                 'queue_depth' : '1',
                 'num_ops' : '50',
                 'integrity_check' : True,
                 'sequential_writes' : False,
                 'blocking_process' : False,
                 'lookout_uuid': ''
                 }
      debug:
         msg: "{{ lookup('nisd_handler', 'niova-block-test', input_param, wantlist=True) }}"
