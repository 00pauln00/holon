- name: "validate_no_dbi_file_in_gc_download"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "validate_no_dbi_file_in_gc_download"
     parent: None
     vdev: 'a7f67edd-09f7-4c13-a4ec-60557553917e'
     chunk_no: '1'

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "/local/minio_data"
      debug:
         msg:
          - "{{ lookup('obj_storage', 'minio', 'start', s3_dir, wantlist=True) }}"
      when: s3Support == "true"

    - name: "Generate 1000 vblk entries"
      vars:
        dbi_param:
          vbAmount: '1000'
          maxVblks: '100'
          vblkPer: '100'
          maxPunches: '0'
          punchAmount: '0'
          seqStart: '0'
          startVblk: '0'
          genType: '1'
          seed: '1'
          blockSize: '16'
          blockSizeMax: '32'
          punchesPer: '0'
          maxPunchSize: '1'
          vdev: "{{ vdev  }}"
          chunk: "{{ chunk_no }}"
        input_param:
          total_chunks : 1
          is_random : true
          remove_files: false
      debug:
         msg:
          - "{{ lookup('data_gen', 'generator', dbi_param, input_param, wantlist=True)[0] }}"

    - name: "{{ recipe_name }}: Start GCService"
      vars:
        params: {
          "dry_run": false,
          "del_dbo": true,
          "partition": false,
          "total_chunks": 0,
          "force_gc": false,
          "dall": true,
        }
      debug:
         msg:
          - "{{ lookup('garbage_collection', 'daemon', 'start', params, wantlist=True) }}"

    # Monitor download dir
    - name: "Get chunk size in bytes"
      vars:
        path: "gc-download/{{ vdev }}/{{ chunk_no }}"
      debug:
         msg: "{{ lookup('helper', 'get_directory_size', path, wantlist=True) }}"
      register: dir_size

    - name: "{{ recipe_name }}: Wait until GC marker file present."
      vars:
        params: {
          "chunk": "{{ chunk_no }}",
        }
      debug:
        msg: "Waiting for GC Marker File"
      until: lookup('obj_storage', 'get_markers', params, wantlist=True)[0][0] is not none
      retries: 500
      delay: 2

    - name: "{{ recipe_name }}: Wait until GC marker and NISD marker gets match."
      vars:
        params: {
          "chunk": "{{ chunk_no }}",
        }
        Sequence: "{{ lookup('obj_storage', 'get_markers', params, wantlist=True)[0] }}"
        gc_marker: "{{ Sequence[0] }}"
        nisd_marker: "{{ Sequence[1] }}"
      debug:
        msg: "Wait until marker values gets match"
      until: gc_marker == nisd_marker
      retries: 500
      delay: 2

    - name: "Check if any file exists in chunk"
      vars:
        path: "gc-download/{{ vdev }}/{{ chunk_no }}"
      debug:
         msg: "{{ lookup('helper', 'is_dir_empty', path, wantlist=True) }}"
      register: is_dir_empty

    - debug:
        msg: "Check if the chunk is empty"
      failed_when: is_dir_empty['msg'] != [true]

    - name: "{{ recipe_name }}: Start data validation"
      debug:
         msg: "{{ lookup('data_gen', 'validator',  chunk_no, wantlist=True) }}"

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
