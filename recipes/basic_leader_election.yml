- import_playbook: term_catch_up.yml
- name: "basic_leader_election"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_leader_election"
     parent: "term_catch_up"
     basic_elect_npeer_start: []

  tasks:
  - block:
    - name: "Check if parent recipe failed"
      debug: msg="Check if parent recipe {{ parent }} failed"
      failed_when: terminate_recipe == true

    - name: "{{ recipe_name }}: Start number of server for basic leader election."
      include_role:
        name: common
        tasks_from: npeers_for_basic_leader_election

    - name: "{{ recipe_name }}: Get the list of peer UUIDs to start for basic leader election."
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "{{ recipe_name }}: Starting peers for basic leader election"
      include_role:
        name: common
        tasks_from: start_server
      vars:
        ServerUUID: "{{ NonRunningServers[item] }}"
      loop: "{{ range(0, npeers_start| int) | list }}"

    - name: "{{ recipe_name }}: Get the updated list of runing peers"
      include_role:
        name: common
        tasks_from: get_server_uuid_info
    
    - name: "{{ recipe_name }}: Wait until leader election happens"
      vars:
         stage: "wait_leader_election"
      debug:
        msg: "Waiting for leader election"
      until: lookup('niova_ctlrequest', 'lookup', NRunningPeers[item], '/raft_root_entry/0/leader-uuid', wantlist=True)| dict2items | map(attribute='value') | list | first != "null"
      retries: 4
      delay: 1
      loop: "{{ range(0, NRunningPeers | length) | list }}"
      loop_control:
        pause: 2

    - name: "{{ recipe_name }}: Get the latest list of running peer UUIDs"
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "{{ recipe_name }}: Gather the stats for all running peers"
      vars:
         stage: "stage0"
         raft_keys:
              - "/raft_root_entry/0/commit-idx"
              - "/raft_root_entry/0/last-applied"
              - "/raft_root_entry/0/last-applied-cumulative-crc"
              - "/raft_root_entry/0/sync-entry-crc"
              - "/raft_root_entry/0/term"
              - "/raft_root_entry/0/sync-entry-term"
         peer_values: "{{ lookup('niova_ctlrequest', 'lookup', NRunningPeers, raft_keys, wantlist=True) }}"
      debug:
        msg: "Getting stats for all running peers."
      no_log: true
      with_items:
        - "{{ peer_values }}"
      register: running_peers_info

    - name: "{{ recipe_name }}: Compare the values for successful leader election."
      vars:
        peer_info: "{{ running_peers_info['results'][item]['item'] }}"
      debug:
        msg:
        - "Validate the raft values for peer: {{ NRunningPeers[item] }}"
      failed_when: >
        (peer_info["/0/commit-idx"] < 0) or
        (peer_info["/0/last-applied"] < 0) or
        (peer_info["/0/last-applied-cumulative-crc"] != peer_info["/0/sync-entry-crc"]) or
        (peer_info["/0/term"] != peer_info["/0/sync-entry-term"])
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
