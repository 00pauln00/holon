- name: "niova_block_test_with_multiple_nisd"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "niova_block_test_with_multiple_nisd"
    parent: None
    number_of_clients: 2
    number_of_uuids: 5
    number_of_nisd_uuids: 5
    no_of_nblock_test_uuids: 5

  tasks:
  - block:
      # check for the app_type
     - name: "{{ recipe_name }}: Check if the app_type is 'controlplane'."
       vars:
         app_type: "{{ app_type }}"
       debug:
         msg: "app_type is: {{ app_type }}"
       failed_when:
         (app_type != "controlplane")

     - name: "{{ recipe_name }}: get the list of non-running servers."
       include_role:
          name: common
          tasks_from: get_server_uuid_info

     - name: "{{ recipe_name }}: Get the leader and follower uuids."
       include_role:
         name: common
         tasks_from: get_follower_stats

      #Get multiple client uuids using common task.
     - name: "Get multiple client uuids."
       include_role:
        name: common
        tasks_from: get_multiple_client_uuids
       loop: "{{ range(0, number_of_clients) | list }}"

     - name: "Prepare gossip node configs"
       set_fact: gossipCreation="{{lookup('niova_raftconfig', "controlplane", TotalNServersList, ClientUUIDS, wantlist=True)}}"

     # Start all PMDB servers.
     - name: "{{ recipe_name }}: Start pmdb servers in the cluster."
       include_role:
         name: common
         tasks_from: start_server_golang
       vars:
         ServerUUID: "{{ NonRunningServers[item] }}"
       loop: "{{ range(0, NonRunningServers | length) | list }}"

      #Start proxyserver
     - name: "{{ recipe_name }}: Start proxy server."
       include_role:
          name: common
          tasks_from: start_proxy_server
       vars:
          ClientUUID: "{{ ClientUUIDS[item] }}"
       loop: "{{ range(0, ClientUUIDS | length) |list }}"

     - pause:
         seconds: 10

     - name: "Generate 5 UUIDs to start nisd process."
       shell: "/usr/bin/uuid"
       loop: "{{ range(0, number_of_nisd_uuids) | list }}"
       register: unique_nisd_uuids

     - name: "Create list of nisd uuids."
       set_fact:
          nisd_uuids: "{{ nisd_uuids | default([]) + [unique_nisd_uuids['results'][item]['stdout']] }}"
       loop: "{{ range(0, unique_nisd_uuids['results'] | length) | list }}"

     - debug:
         msg: "nisd uuid list: {{ nisd_uuids }}"

     - name: "{{ recipe_name }}: Starting controlplane_client to write config information of nisd."
       vars:
         input_param: {
                  'Key': '{{ nisd_uuids[item] }}',
                  'Value': '',
                  'Operation': 'write',
                  'IP_addr': '127.0.0.1',
                  'Port': '350{{ item }}',
                  'OutfileName': 'nisd_config_output_{{ item }}'
                  }
       debug:
         msg: "{{ lookup('controlplane', 'ncpc', input_param, wantlist=True) }}"
       loop: "{{ range(0, nisd_uuids | length) | list }}"
       loop_control:
          pause: 2

     - name: "{{ recipe_name }}: Starting controlplane_client to read the config data"
       vars:
         input_param: {
                  'Key': '{{ nisd_uuids[item] }}',
                  'Value': '',
                  'Operation': 'read',
                  'IP_addr': '',
                  'Port': '',
                  'OutfileName': 'read_output_{{ item }}'
                  }
       debug:
         msg: "{{ lookup('controlplane','ncpc', input_param, wantlist=True) }}"
       loop: "{{ range(0, nisd_uuids | length) | list }}"
       loop_control:
          pause: 2

     - pause:
         seconds: 5

     - name: "Generate UUIDs to start niova-lookout process."
       shell: "/usr/bin/uuid"
       loop: "{{ range(0, number_of_uuids) | list }}"
       register: unique_lookout_uuids

     - name: "Create list of lookout uuids."
       set_fact:
          lookout_uuids: "{{ lookout_uuids | default([]) + [unique_lookout_uuids['results'][item]['stdout']] }}"
       loop: "{{ range(0, unique_lookout_uuids['results'] | length) | list }}"

     - debug:
         msg: "lookout uuids: {{ lookout_uuids }}"

     - name: "{{ recipe_name }}: Start niova-lookout process."
       vars:
         input_param: {
                 'lookout_uuid' :  '{{ lookout_uuids[item] }}',
                 'aport' : '490{{ item }}',
                 'hport' : '900{{ item }}',
                 'rport' : '590{{ item }}',
                 'uport' : '106{{ item }}'
                 }
       debug:
         msg:
          -  "{{ input_param }}"
          -  "{{ lookup('controlplane', 'niova-lookout', input_param, wantlist=true) }}"
       loop: "{{ range(0, lookout_uuids | length) | list }}"
       loop_control:
          pause: 10

     - name: "{{ recipe_name }}: Start controlplane_client to get membership details."
       vars:
         input_param: {
                  'Key': '',
                  'Value': '',
                  'Operation': 'membership',
                  'IP_addr': '',
                  'Port': '',
                  'OutfileName': 'membership_output'
                  }
       debug:
         msg: "{{ lookup('controlplane', 'ncpc', input_param, wantlist=True) }}"

     - name: "{{ recipe_name }}: Start niova-block-ctl process.."
       include_role:
          name: common
          tasks_from: start_niova_block_ctl
       vars:
         lookoutUUIDList: "{{ lookout_uuids }}"
         nisdUuidsList: "{{ nisd_uuids }}"
         nisdDevFile: '21474836480'

     - name: "{{ recipe_name }}: Prepare 5 nisd uuid list."
       vars:
         nisd_uuid_list: []
       set_fact:
         nisd_uuid_list: "{{ nisd_uuid_list + [nisd_uuids[item]] }}"
       loop: "{{ range(0, nisd_uuids | length - 2) | list }}"

     - debug:
         msg: "{{ nisd_uuid_list }}"

     - name: "{{ recipe_name }}: Prepare 3 uuid list."
       set_fact:
         get_nisd_list: "{{ nisd_uuids | difference(nisd_uuid_list) }}"

     - debug:
         msg: "{{ get_nisd_list }}"

     - name: "{{ recipe_name }}: Start 5 nisd process for 1 lookout process."
       vars:
         input_param: {
                  'nisd_uuid' : '{{ nisd_uuid_list[item] }}',
                  'uport' : '1060',
                  'lookout_uuid' :  '{{ lookout_uuids[0] }}'
                  }
       debug:
         msg: "{{ lookup('controlplane', 'nisd', input_param, wantlist=True) }}"
       loop: "{{ range(0, nisd_uuid_list | length) | list }}"
       loop_control:
          pause: 5

     - name: "{{ recipe_name }}: Start 3 nisd process for another lookout process."
       vars:
         get_nisd_list: "{{ nisd_uuids | difference(nisd_uuid_list) }}"
         input_param: {
                  'nisd_uuid' : '{{ get_nisd_list[item] }}',
                  'uport' : '1061',
                  'lookout_uuid' :  '{{ lookout_uuids[1] }}'
                  }
       debug:
         msg: "{{ lookup('controlplane', 'nisd', input_param, wantlist=True) }}"
       loop: "{{ range(0, get_nisd_list | length) | list }}"
       loop_control:
          pause: 5

     - name: "{{ recipe_name }}: Get system info before write operation for 1 lookout."
       include_role:
          name: common
          tasks_from: get_nisd_info
       vars:
         lookoutUUIDList: "{{ lookout_uuids[0] }}"
         nisdUuidsList: "{{ nisd_uuid_list }}"

     - name: "{{ recipe_name }}: Get system info before write operation for 2nd lookout."
       include_role:
          name: common
          tasks_from: get_nisd_info
       vars:
         lookoutUUIDList: "{{ lookout_uuids[1] }}"
         nisdUuidsList: "{{ get_nisd_list }}"

     - name: "Generate uuid to write operation"
       shell: "/usr/bin/uuid"
       loop: "{{ range(0, no_of_nblock_test_uuids) | list }}"
       register: unique_nblock_test_uuids

     - name: "Create list of niova-block-test uuids."
       set_fact:
          nblock_test_uuids_list: "{{ nblock_test_uuids_list | default([]) + [unique_nblock_test_uuids['results'][item]['stdout']] }}"
       loop: "{{ range(0, unique_nblock_test_uuids['results'] | length) | list }}"

     - debug:
         msg: "niova_block_test UUIDS: {{ nblock_test_uuids_list }}"

     - name: "{{ recipe_name }}: Do write operation through niova-block-test."
       include_role:
          name: common
          tasks_from: write_with_niova_block_test
       vars:
         nblock_test_uuids: "{{ nblock_test_uuids_list }}"
         nisdUuidsList: "{{ nisd_uuids }}"
         lookoutUUIDList: "{{ lookout_uuids }}"
         rd_op_ratio: '0.5'
         num_of_ops: '1000'
         req_sz: '16'
         queueDepth: '100'

     - name: "{{ recipe_name }}: Get system info after write operation for 1 lookout."
       include_role:
          name: common
          tasks_from: get_nisd_info
       vars:
         lookoutUUIDList: "{{ lookout_uuids[0] }}"
         nisdUuidsList: "{{ nisd_uuid_list }}"

     - name: "{{ recipe_name }}: Get system info after write operation for 2nd lookout."
       include_role:
          name: common
          tasks_from: get_nisd_info
       vars:
         lookoutUUIDList: "{{ lookout_uuids[1] }}"
         nisdUuidsList: "{{ get_nisd_list }}"

    rescue:
     - name: "Recipe: {{ recipe_name }} failed"
       set_fact:
         terminate_recipe: true



