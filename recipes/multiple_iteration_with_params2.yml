- name: "multiple_iteration_with_params2"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "multiple_iteration_with_params2"
     parent: None

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "minio_data"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_s3', s3_dir, wantlist=True) }}"
      when: s3Support == "true"

    - name: "Generate DBIs for first iteration."
      vars:
         input_param: {
                  "chunk": "2",
                  "maxPunches": "64",
                  "maxVblks": "1024",
                  "punchAmount": "10",
                  "punchesPer": "0",
                  "maxPunchSize": "1024",
                  "seed": "2",
                  "seqStart": "0",
                  "vbAmount": "100000",
                  "vblkPer": "10",
                  "genType": "2",
                  "blockSize": "4",
                  "blockSizeMax": "32",
                  "startVblk": "1",
                  "strideWidth": "",
                  "overlapSeq": "",
                  "numOfSet": "",
                  "vdev": "",
                  "s3configPath": "",
                 }
      debug:
         msg:
          - "{{ lookup('s3_handler', 'multiple_iteration_params', input_param, wantlist=True) }}"

    - name: "{{ recipe_name }}: Perform GC after first iteration"
      vars:
        debugMode: true
        Chunk: "2"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_gc', debugMode, Chunk, wantlist=True) }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "Generate DBIs for second iteration."
      vars:
         input_param: {
                  "chunk": "2",
                  "maxPunches": "64",
                  "maxVblks": "1024",
                  "punchAmount": "10",
                  "punchesPer": "0",
                  "maxPunchSize": "1024",
                  "seed": "2",
                  "seqStart": "100010",
                  "vbAmount": "100000",
                  "vblkPer": "10",
                  "genType": "2",
                  "blockSize": "4",
                  "blockSizeMax": "32",
                  "startVblk": "1",
                  "strideWidth": "",
                  "overlapSeq": "",
                  "numOfSet": "",
                  "vdev": "",
                  "s3configPath": "",
                 }
      debug:
         msg:
          - "{{ lookup('s3_handler', 'multiple_iteration_params', input_param, wantlist=True) }}"

    - name: "{{ recipe_name }}: Perform GC after second iteration"
      vars:
        debugMode: false
        Chunk: "2"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_gc', debugMode, Chunk, wantlist=True) }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Start data validation"
      vars:
        Chunk: "2"
      debug:
         msg: "{{ lookup('s3_handler', 'data_validate',  Chunk, wantlist=True) }}"

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true

