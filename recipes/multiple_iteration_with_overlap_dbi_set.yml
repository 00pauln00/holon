- name: "multiple_iteration_with_overlap_dbi_set"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "multiple_iteration_with_overlap_dbi_set"
     parent: None

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "minio_data"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_s3', s3_dir, wantlist=True) }}"
      when: s3Support == "true"

    - name: "{{ recipe_name }}: Generate overlapping seq range and unique DBIs."
      include_role:
        name: common
        tasks_from: generate_overlapping_dbi_set
      vars:
        Type: "0"
        VblkNum: "100"
        VblkPer: "5"
        DBIPerSet: "3"
        ChunkNum: "-1"
      register: chunk

    - name: "{{ recipe_name }}: Perform GC and keep stale dbis"
      vars:
        debugMode: true
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_gc', debugMode, Chunk, wantlist=True) }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Generate overlapping seq range and unique DBIs."
      include_role:
        name: common
        tasks_from: generate_overlapping_dbi_set
      vars:
        Type: "0"
        VblkNum: "100"
        VblkPer: "5"
        DBIPerSet: "3"
        ChunkNum: "{{ chunk['msg'][0] }}"

    - name: "{{ recipe_name }}: Perform GC and Delete stale dbis"
      vars:
        debugMode: false
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_gc', debugMode, Chunk, wantlist=True) }}"
      register: gc_output

    - debug:
         msg: "Check return code of GC Process."
      failed_when: gc_output['msg'][0] != "0"

    - name: "{{ recipe_name }}: Start data validation"
      vars:
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('s3_handler', 'data_validate', Chunk, wantlist=True) }}"

