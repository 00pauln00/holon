- name: "failed_to_upload_dbi_set_dbifile_with_s3"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "failed_to_upload_dbi_set_dbifile_with_s3"
     parent: None

  tasks:
  - block:

    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "minio_data"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_s3', s3_dir, wantlist=True) }}"
      when: s3Support == "true"

    - name: "{{ recipe_name }}: Generate overlapping seq range and unique DBIs."
      include_role:
        name: common
        tasks_from: generate_overlapping_dbi_set
      vars:
        Type: "0"
        VblkNum: "1000"
        VblkPer: "8"
        DBIPerSet: "5"
        ChunkNum: "-1"
      register: chunk

    - name: "{{ recipe_name }}: copy dbi set files into a new directory."
      vars:
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('s3_handler', 'copyDBIset', Chunk, wantlist=True) }}"

    - name: "{{ recipe_name }}: delete file from the dbi set from s3."
      vars:
        operation: "delete"
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg: "{{ lookup('s3_handler', 'deleteSetFileS3', operation, Chunk, wantlist=True) }}"

    - name: "{{ recipe_name }}: Perform GC."
      vars:
        debugMode: false
        Chunk: "{{ chunk['msg'][0] }}"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_gc', debugMode, Chunk, wantlist=True) }}"

    - name: "{{ recipe_name }}: Marker file present or not."
      vars:
        Chunk: "{{ chunk['msg'][0] }}"
        mType: "Both"
      debug:
        msg: "{{ lookup('s3_handler', 'GetSeqOfMarker', mType, Chunk, wantlist=True) }}"
      register: marker_check

    - name: "{{ recipe_name }}: Validate GC and Nisd Marker Sequence Equal or Not."
      vars:
        gcMarkerEndSeq: "{{ marker_check.msg[0] }}"
        NisdMarkerEndSeq: "{{ marker_check.msg[1] }}"
      debug:
        msg: "GC Marker End Seq: {{ gcMarkerEndSeq }} | NISD Marker End Seq: {{ NisdMarkerEndSeq }}"
      failed_when: gcMarkerEndSeq != NisdMarkerEndSeq
