- name: "get multiple leases"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "get_multiple_leases"
     parent: None
     no_of_leases: 10

  tasks:
  - block:
    - name: "{{ recipe_name }}: Get the non-running peers list to select first peer to start"
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "Start 5 peers in the cluster"
      include_role:
        name: common
        tasks_from: start_server
      vars:
        ServerUUID: "{{ NonRunningServers[item] }}"
      loop: "{{ range(0, NonRunningServers | length) | list }}"

    - name: "{{ recipe_name }}: Get the running peers list."
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "Get multiple client uuids."
      include_role:
        name: common
        tasks_from: get_multiple_client_uuids
      loop: "{{ range(0, no_of_leases) | list }}"

    - name: "Get multiple resource uuids."
      include_role:
        name: common
        tasks_from: get_multiple_resource_uuids
      loop: "{{ range(0, no_of_leases) | list }}"

    - name: "Perform multiple 'get_lease' operation"
      include_role:
        name: common
        tasks_from: get_lease
      vars:
         ClientUUID: "{{ ClientUUIDS }}"
         resourceUUID: "{{ resourceUUIDS }}"
         outfilename: "{{ resourceUUIDS }}"
         no_of_lease_ops: "{{ no_of_leases }}"

    - name: "{{ recipe_name }}: Get cluster information"
      include_role:
        name: common
        tasks_from: get_follower_stats

    - name: "{{ recipe_name }}: Get the raft values for all running peers"
      vars:
         stage: "stage0_get_all"
         raft_keys:
            - "/raft_root_entry/0/leader-uuid"
            - "/raft_root_entry/0/term"
            - "/raft_root_entry/0/leader-time"
         peers_val: "{{ lookup('niova_ctlrequest', 'lookup', LeaderUUID['/0/leader-uuid'], raft_keys, wantlist=True) }}"
      debug:
        msg: "Getting stats for all running peers: {{ peers_val }}"
      #no_log: true
      with_items:
         - "{{ peers_val }}"
      register: stage0_peers_vals

    - name: "{{ recipe_name }}: Store term and leader-time for new Leader"
      vars:
         old_leader: "{{ LeaderUUID['/0/leader-uuid'] }}"
      debug:
        msg: "Old Leader UUID"
      #no_log: true
      with_items:
         - "{{ old_leader }}"
      register: orig_leader

    - name: "{{ recipe_name }}: Kill the Leader."
      debug:
        msg: "{{ lookup('niova_raftprocess', 'kill', orig_leader['results'][0]['item'], wantlist=True) }}"

    - name: "{{ recipe_name }}: Again wait until new leader election happens."
      vars:
         stage: "wait_for_new_leader_election"
      debug:
        msg: "Waiting for leader election"
      until: lookup('niova_ctlrequest', 'lookup', NRunningPeers[item], '/raft_root_entry/0/leader-uuid', wantlist=True)| dict2items | map(attribute='value') | list | first != "null"
      retries: 10
      delay: 1
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    - name: "{{ recipe_name }}: Get cluster information"
      include_role:
        name: common
        tasks_from: get_follower_stats

    - name: "Perform multiple 'lookup_lease' operation"
      include_role:
        name: common
        tasks_from: lookup_lease
      vars:
         ClientUUID: '{{ ClientUUIDS }}'
         resourceUUID: '{{ resourceUUIDS }}'
         outfilename: '{{ resourceUUIDS }}'
         no_of_lease_ops: "{{ no_of_leases }}"

    #TODO Verify TS should updated
    #TODO Verify Term gets incremented

