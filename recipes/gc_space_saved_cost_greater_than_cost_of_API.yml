- name: "gc_space_saved_cost_greater_than_cost_of_costAPI"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "gc_space_saved_cost_greater_than_cost_of_costAPI"
     parent: None

  tasks:
  - block:
    - name: "{{ recipe_name }}: Start minio server"
      vars:
        s3_dir: "minio_data"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_s3', s3_dir, wantlist=True) }}"
      when: s3Support == "true"

    - name: "Generate DBIs with vblk entry"
      vars:
         input_param: {
                  "chunk": "2",
                  "maxPunches": "20",
                  "maxVblks": "256",
                  "punchAmount": "100",
                  "punchesPer": "0",
                  "maxPunchSize": "20",
                  "seed": "123",
                  "seqStart": "0",
                  "vbAmount": "250",
                  "vblkPer": "100",
                  "genType": "1",
                  "blockSize": "8",
                  "blockSizeMax": "32",
                  "startVblk": "0",
                  "strideWidth": "",
                  "overlapSeq": "",
                  "numOfSet": "",
                  "vdev": "643eef86-e42b-11ee-8678-22abb648e432",
                  "s3configPath": "",
                  "punchwholechunk": "false",
                 }
      debug:
         msg:
          - "{{ lookup('s3_handler', 'example_params', input_param, wantlist=True) }}"

    - name: "{{ recipe_name }}: pause for 3 seconds."
      pause:
        seconds: 3

    - name: "{{ recipe_name }}: Start GCService"
      vars:
        dryRun: True
      debug:
         msg:
          - "{{ lookup('s3_handler', 'start_gcService', dryRun, wantlist=True) }}"

    - name: "{{ recipe_name }}: Wait until GC marker file present."
      vars:
         Chunk: "2"
         stage: "wait_for_gc_marker"
      debug:
        msg: "Waiting for GC Marker File"
      until: lookup('s3_handler', 'isGCMarkerFilePresent', Chunk, wantlist=True) == true
      retries: 100
      delay: 2

    - name: "{{ recipe_name }}: Check GC Marker file is Present or not."
      vars:
        Chunk: "2"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'isGCMarkerFilePresent', Chunk, wantlist=True) }}"
      register: isGCMarkerFilePresent

    - name: "{{ recipe_name }}: Validate that GC Marker file is Present."
      debug:
        msg: "Validate that GC marker file is present"
      failed_when: isGCMarkerFilePresent == False

    - name: "{{ recipe_name }}: Check NISD Marker file sequence."
      vars:
        Chunk: "2"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'getNISDMarkerFileSeq', Chunk, wantlist=True) }}"
      register: NisdMarkerEndSeq

    - name: "{{ recipe_name }}: Check GC Marker file sequence."
      vars:
        Chunk: "2"
      debug:
         msg:
          - "{{ lookup('s3_handler', 'getGCMarkerFileSeq', Chunk, wantlist=True) }}"
      register: GCMarkerEndSeq

    - name: "{{ recipe_name }}: Validate that NISD and GC Marker Sequnece matched"
      debug:
        msg: "Validate that NISD and GC marker file SEq are same."
      failed_when: NisdMarkerEndSeq != GCMarkerEndSeq

    - name: "{{ recipe_name }}: Start data validation"
      vars:
        Chunk: "2"
      debug:
         msg: "{{ lookup('s3_handler', 'data_validate',  Chunk, wantlist=True) }}"

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
