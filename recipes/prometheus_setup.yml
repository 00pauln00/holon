- name: "basic_controlplane_membership.yml"
  hosts: localhost
  connection: local
  vars:
    recipe_name: "basic_controlplane_membership"
    parent: None
    number_of_clients: 2

  tasks:
  - block:

    # check for the app_type
     - name: "{{ recipe_name }}: Check if the app_type is 'controlplane'."
       vars:
         app_type: "{{ app_type }}"
       debug:
         msg: "app_type is: {{ app_type }}"
       failed_when:
         (app_type != "controlplane")

    #FIXME: Start of pmdb server and proxy is common for most of the tasks, so why not make it common.
     - name: "{{ recipe_name }}: get the list of non-running servers."
       include_role:
          name: common
          tasks_from: get_server_uuid_info

     # Get multiple client uuids using common task.
     - name: "Get multiple client uuids."
       include_role:
        name: common
        tasks_from: get_multiple_client_uuids
       loop: "{{ range(0, number_of_clients) | list }}"

     - name: "Prepare gossip node configs"
       set_fact: gossipCreation="{{lookup('niova_raftconfig', "controlplane", TotalNServersList, ClientUUIDS, wantlist=True)}}"

     # Start 4 PMDB servers.
     - name: "{{ recipe_name }}: Start 5 pmdb servers in the cluster."
       include_role:
         name: common
         tasks_from: start_server_golang
       vars:
         ServerUUID: "{{ NonRunningServers[item] }}"
       loop: "{{ range(0, NonRunningServers | length) | list }}"

     # Start proxy servers
     - name: "{{ recipe_name }}: Start proxy servers."
       include_role:
          name: common
          tasks_from: start_proxy_server
       vars:
          ClientUUID: "{{ ClientUUIDS[item] }}"
       loop: "{{ range(0, ClientUUIDS | length) |list }}"
    
         

         #- name: "{{ recipe_name }}: Start niova-lookout process."
         #vars:
         #input_param: {
         #       'aport' : '1100{{item}}',
         #       'hport' : '1200{{item}}',
         #       'rport' : '1300{{item}}',
         #       'uport' : '1400{{item}}', 
         #       'uuid'  : "{{ NonRunningServers[item] }}",
         #        }
         # debug:
         #msg: "{{ lookup('controlplane', 'niova-lookout', input_param, wantlist=true) }}"
    
         #loop: "{{ range(0, NonRunningServers | length) | list }}"
        
    rescue:
     - name: "Recipe: {{ recipe_name }} failed"
       set_fact:
         terminate_recipe: true
