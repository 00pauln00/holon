- import_playbook: ../raft_recipes/basic_leader_election2.yml

- name: "Bulk Recovery Avoid New Writes"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "bulk_recovery_avoid_new_writes"
     parent: "basic_leader_election2"
     num_writes: 1400
     number_of_app_uuids: 5
     raft_root_entry_keys:
              - "/raft_root_entry/0/leader-uuid"
              - "/raft_root_entry/0/peer-uuid"
              - "/raft_root_entry/0/term"
              - "/raft_root_entry/0/commit-idx"
              - "/raft_root_entry/0/checkpoint-idx"
              - "/raft_root_entry/0/lowest-idx"
              - "/raft_net_info/max-scan-entries"
              - "/raft_net_info/log-reap-factor"
     cli_root_entry_keys:
              - "/pumice_db_test_client/pmdb-test-apps/0/status"
              - "/pumice_db_test_client/pmdb-test-apps/0/pmdb-seqno"
              - "/pumice_db_test_client/pmdb-test-apps/0/pmdb-write-pending"
              - "/pumice_db_test_client/pmdb-test-apps/0/app-sync"
              - "/pumice_db_test_client/pmdb-test-apps/0/app-seqno"

  tasks:
  - block:
    - name: "Check if parent recipe failed"
      debug: msg="Check if parent recipe {{ parent }} failed"
      failed_when: terminate_recipe == true

    - name: "{{ recipe_name }}: Get the latest list of running peer UUIDs"
      include_role:
         name: common
         tasks_from: get_server_uuid_info

    - name: "{{ recipe_name }}: Get the values from all 3 peers."
      vars:
         stage: "stage0_get_all"
         peer_values: "{{ lookup('niova_ctlrequest', 'lookup', NRunningPeers, raft_root_entry_keys) }}"
      debug:
        msg: "Get the raft values for running peers"
      with_items:
       - "{{ peer_values }}"
      register: stage0_values

    - name: "{{ recipe_name }}: Apply fault injection on all peers i.e. 1, 2 and 3."
      include_role:
        name: common
        tasks_from: set_fault_injection_and_verify
      vars:
        ServerUUID: "{{ NRunningPeers[item] }}"
        fault_injection_name: "raft_force_set_max_scan_entries"
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    - name: "{{ recipe_name }}: Set max scan entries to 1000 and log reap factor to 2 "
      include_role:
        name: common
        tasks_from: set_maxScan_logReap_factor_andVerify
      vars:
          Peers: "{{ NRunningPeers[item] }}"
      loop: "{{ range(0, NRunningPeers | length) |list }}"

    - name: "{{ recipe_name }}: Store the UUID for peer4 which needs to be started."
      vars:
        peer4: "{{ NonRunningServers[0] }}"
      debug:
        msg: "Get the new peer to start: {{ peer4 }}"
      with_items:
        - "{{ peer4 }}"
      register: newlyStartedPeer4

    - name: "{{ recipe_name }}: Get unused client uuid for starting the client"
      include_role:
        name: common
        tasks_from: get_new_client_uuid
      register: client_uuid

    - name: "{{ recipe_name }}: Start client process"
      include_role:
        name: common
        tasks_from: start_client
      vars:
        ClientUUID: "{{ client_uuid.stdout }}"

    - name: "{{ recipe_name }}: Verify leader is viable."
      include_role:
        name: common
        tasks_from: verify_leader_viable
      vars:
        ClientUUID: "{{ client_uuid.stdout }}"

      #Create set of required number of app_uuids.
    - name: "Get set of required number of app_uuids."
      include_role:
        name: common
        tasks_from: create_app_uuid_set
      vars:
        number_of_apps: "{{number_of_app_uuids}}"

    #Perform write operations.
    - name: "Perform write operations."
      include_role:
         name: common
         tasks_from: perform_writes
      vars:
        pmdb_apps: "{{ pmdb_app_uuids  }}"
        ClientUUID: "{{ client_uuid.stdout }}"
        constant_number_of_writes: "{{ num_writes }}"

    - name: "{{ recipe_name}}: Wait until all write completes from client"
      vars:
        stage: "wait_for_1st_write_op"
      debug:
        msg: "Waiting for client to finish writing."
      until: lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, '/pumice_db_test_client/pmdb-test-apps/0/pmdb-seqno')['/0/pmdb-seqno'] == (num_writes - 1)
      retries: 500
      delay: 1

    - name: "{{ recipe_name }}: Verify commit-idx gets incremented on all peers after write operation."
      vars:
         origCI: "{{ stage0_values['results'][0]['item'] }}"
         stage: "getValsFrmAll"
      debug:
        msg: "Verify Commit-Idx get incrementing on all peers."
      until: lookup('niova_ctlrequest', 'lookup', NRunningPeers[item], '/raft_root_entry/0/commit-idx')['/0/commit-idx'] >= ((num_writes | int)* (number_of_app_uuids | int) + (origCI['/0/commit-idx'] | int))
      retries: 500
      delay: 1
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    - name: "{{ recipe_name }}: Verify checkpoint-idx gets changed on all 3 peers after write operation."
      vars:
         stage: "verifyCPOnAll"
         getCPOnAll: "{{ lookup('niova_ctlrequest', 'lookup', NRunningPeers[item], raft_root_entry_keys) }}"
      debug:
        msg: "Verify checkpoint-idx gets changed on all peers."
      failed_when: >
           (getCPOnAll["/0/checkpoint-idx"] == -1) or
           (getCPOnAll["/0/lowest-idx"] == -1)
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    - name: "{{ recipe_name }}: Get all values after 1st set of writes."
      vars:
         stage: "origValAftr10000Wr"
         getValAftr10000Wr: "{{ lookup('niova_ctlrequest', 'lookup', NRunningPeers, raft_root_entry_keys) }}"
      debug:
        msg: "Get commit-idx from all peers: {{ getValAftr10000Wr }}"
          #      no_log: true
      with_items:
        - "{{ getValAftr10000Wr }}"
      register: after1stWr

    - name: "{{ recipe_name }}: Start new peer."
      include_role:
        name: common
        tasks_from: start_server
      vars:
        ServerUUID: "{{ newlyStartedPeer4['results'][0]['item'] }}"

    - name: "{{ recipe_name }}: Apply fault injection on newly started peer."
      include_role:
        name: common
        tasks_from: set_fault_injection_and_verify
      vars:
        ServerUUID: "{{ newlyStartedPeer4['results'][0]['item'] }}"
        fault_injection_name: "raft_force_set_max_scan_entries"

    - name: "{{ recipe_name }}: Set max scan entries to 1000 and log reap factor to 2 "
      include_role:
        name: common
        tasks_from: set_maxScan_logReap_factor_andVerify
      vars:
          Peers: "{{ newlyStartedPeer4['results'][0]['item'] }}"

    - name: "{{ recipe_name }}: Get the latest list of running peer UUIDs"
      include_role:
         name: common
         tasks_from: get_server_uuid_info

    #Disabling Msg(Send) net_send_enabled  from peer4 to the leader.
    - name: "{{ recipe_name }}: Disable Msg(Send) net_send_enabled from peer4 to the leader."
      vars:
        origLeader: "{{ stage0_values['results'][0]['item']['/0/leader-uuid'] }}"
        stage: "disableSend"
        cmd: "net_send_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', origLeader, cmd, where) }}"
      no_log: true

    #Disabling Msg(Recv) net_recv_enabled  from peer4 to the leader.
    - name: "{{ recipe_name }}: Disable Msg(Recv) net_recv_enabled from peer4 to the leader."
      vars:
        origLeader: "{{ stage0_values['results'][0]['item']['/0/leader-uuid'] }}"
        stage: "disableRecv"
        cmd: "net_recv_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', origLeader, cmd, where) }}"
      no_log: true

    # Disable send on client from the peer4
    - name: "{{ recipe_name }}: Disable send on client from the peer4."
      vars:
        stage: "disable_net_send"
        cmd: "net_send_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where) }}"
      no_log: true

    # Disable recv on client from the peer4
    - name: "{{ recipe_name }}: Disable recv on client from the peer4."
      vars:
        stage: "disable_net_recv"
        cmd: "net_recv_enabled@false"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where) }}"
      no_log: true

    - name: "{{ recipe_name }}: Get values from peer4 after 1st write set."
      vars:
         stage: "aftr1stWrPeer4"
         get1stWrPeer4: "{{ lookup('niova_ctlrequest', 'lookup', newlyStartedPeer4['results'][0]['item'], raft_root_entry_keys) }}"
      debug:
        msg: "Get values from peer4: {{ get1stWrPeer4 }}"
      no_log: true
      with_items:
        - "{{ get1stWrPeer4 }}"
      register: after1stWrForPeer4

      #Create set of required number of app_uuids.
    - name: "Get set of required number of app_uuids."
      include_role:
        name: common
        tasks_from: create_app_uuid_set
      vars:
        number_of_apps: "{{number_of_app_uuids}}"

    #Perform write operations.
    - name: "Perform write operations."
      include_role:
         name: common
         tasks_from: perform_writes
      vars:
        pmdb_apps: "{{ pmdb_app_uuids  }}"
        ClientUUID: "{{ client_uuid.stdout }}"
        constant_number_of_writes: "{{ num_writes }}"

    - name: "{{ recipe_name}}: Wait until 2nd set of 7000 write completes from client"
      vars:
        stage: "waitToComp2ndWr"
      debug:
        msg: "Waiting for client to finish writing"
      until: lookup('niova_ctlrequest', 'lookup', client_uuid.stdout, '/pumice_db_test_client/pmdb-test-apps/0/pmdb-seqno')['/0/pmdb-seqno'] == (num_writes - 1)
      retries: 500
      delay: 1

    - name: "{{ recipe_name }}: Verify commit-idx gets incremented on all 3 peers except peer4."
      vars:
         nwrites: 7000
         origCI: "{{ after1stWr['results'][0]['item']['/0/commit-idx'] }}"
         exceptPeer4: "{{ NRunningPeers | difference(newlyStartedPeer4['results'][0]['item']) }}"
         stage: "getCIaftr1stWrtexceptPeer4"
      debug:
        msg: "Verify Commit-Idx get incrementing on all peers except peer4."
      until: lookup('niova_ctlrequest', 'lookup', exceptPeer4[item], '/raft_root_entry/0/commit-idx')['/0/commit-idx'] >= ((num_writes | int) * (number_of_app_uuids | int)) + (origCI | int)
      retries: 500
      delay: 1
      loop: "{{ range(0, exceptPeer4 | length) | list }}"

    - name: "{{ recipe_name }}: Verify after disabling send/recv checkpoint-idx and lowest-idx should increment on other peers except peer4."
      vars:
         stage: "getLICPaftr1stWrexceptPeer4"
         aftr1stWrVal: "{{ after1stWr['results'][item]['item'] }}"
         exceptPeer4: "{{ NRunningPeers | difference(newlyStartedPeer4['results'][0]['item']) }}"
         verifyAftr2ndWr: "{{ lookup('niova_ctlrequest', 'lookup', exceptPeer4[item], raft_root_entry_keys,  ) }}"
      debug:
        msg: "Verify parameters after 2nd write set"
      failed_when:
        (verifyAftr2ndWr["/0/checkpoint-idx"] <= aftr1stWrVal["/0/checkpoint-idx"]) or
        (verifyAftr2ndWr["/0/lowest-idx"] <= aftr1stWrVal["/0/lowest-idx"]) or
        (verifyAftr2ndWr["/0/commit-idx"] <= aftr1stWrVal["/0/commit-idx"])
      loop: "{{ range(0, exceptPeer4 | length) | list }}"

    - name: "{{ recipe_name }}: Verify after disabling send/recv checkpoint-idx and lowest-idx is not incremented on peer4."
      vars:
         stage: "aftr1stWrPeer4"
         aftr1stWrVal: "{{ after1stWrForPeer4['results'][0]['item'] }}"
         verifyPeer4: "{{ lookup('niova_ctlrequest', 'lookup', newlyStartedPeer4['results'][0]['item'], raft_root_entry_keys) }}"
      debug:
        msg: "Verify parameters after 2nd write set"
      failed_when:
        (verifyPeer4["/0/checkpoint-idx"] != aftr1stWrVal["/0/checkpoint-idx"]) or
        (verifyPeer4["/0/lowest-idx"] != aftr1stWrVal["/0/lowest-idx"]) or
        (verifyPeer4["/0/commit-idx"] != aftr1stWrVal["/0/commit-idx"])

    #Enabling Msg(Send) net_send_enabled from peer4 to the leader.
    - name: "{{ recipe_name }}: Enable Msg(Send) net_send_enabled from peer4 to the leader."
      vars:
        origLeader: "{{ stage0_values['results'][0]['item']['/0/leader-uuid'] }}"
        stage: "enableSend"
        cmd: "net_send_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', origLeader, cmd, where) }}"
      no_log: true

    #Enabling Msg(Recv) net_recv_enabled from peer4 to the leader.
    - name: "{{ recipe_name }}: Enable Msg(Recv) net_recv_enabled from peer4 to the leader."
      vars:
        origLeader: "{{ stage0_values['results'][0]['item']['/0/leader-uuid'] }}"
        stage: "enableRecv"
        cmd: "net_recv_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', origLeader, cmd, where) }}"

    # Enabling Msg(send) from peer4 to the client.
    - name: "{{ recipe_name }}: Enable Msg(send) from peer4 to the client."
      vars:
        stage: "enable_msg_send"
        cmd: "net_send_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
          msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where) }}"
      no_log: true

    # Enabling Msg(recv) from peer4 to the client.
    - name: "{{ recipe_name }}: Enable Msg(recv) from peer4 to the client."
      vars:
        stage: "enable_msg_recv"
        cmd: "net_recv_enabled@true"
        where: "/ctl_svc_nodes/uuid@{{ newlyStartedPeer4['results'][0]['item'] }}"
      debug:
          msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid.stdout, cmd, where) }}"
      no_log: true

    - name: "{{ recipe_name }}: Verify commit-idx gets incremented on peer4 after enabling send/recv."
      vars:
         origCI: "{{ after1stWr['results'][0]['item']['/0/commit-idx'] }}"
         stage: "getCIfrmPeer4"
      debug:
        msg: "Verify Commit-Idx get incrementing on peer4."
      until: lookup('niova_ctlrequest', 'lookup', newlyStartedPeer4['results'][0]['item'], '/raft_root_entry/0/commit-idx')['/0/commit-idx'] >= ((num_writes | int) * (number_of_app_uuids | int)) + (origCI | int)
      retries: 500
      delay: 1

    #Set peer4 as a leader.
    - name: "{{ recipe_name }}: Disable message receive on all peers to set peer4 as a leader."
      vars:
         stage: "disableRecvOnAll"
         cmd: "net_recv_enabled@false"
         where: "/ctl_svc_nodes/net_recv_enabled@true"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', NRunningPeers, cmd, where) }}"
      no_log: true

    - name: "{{ recipe_name }}: Selected leader-to-be"
      set_fact:
        peer4Leader_to_be: "{{ newlyStartedPeer4['results'][0]['item'] }}"

    - name: "{{ recipe_name }}: Enable receive on all peers from the leader-to-be."
      vars:
         stage: "enableOnAllFrmLeaderToBe"
         cmd: "net_recv_enabled@true"
         where: "/ctl_svc_nodes/uuid@{{ peer4Leader_to_be }}"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', NRunningPeers, cmd, where) }}"
      no_log: true

    - name: "{{ recipe_name }}: Enable message receive on peer which is leader-to-be"
      vars:
         stage: "enableOnPeer4"
         cmd: "net_recv_enabled@true"
         where: "/ctl_svc_nodes/net_recv_enabled@false"
      debug:
       msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', peer4Leader_to_be, cmd, where) }}"
      no_log: true

    - name: "{{ recipe_name }}: Verify new leader is elected successfully"
      vars:
         stage: "verifyNewLeader"
      debug:
        msg:
         - "Waiting for new leader election"
      until: lookup('niova_ctlrequest', 'lookup', NRunningPeers[item], '/raft_root_entry/0/leader-uuid')['/0/leader-uuid'] == peer4Leader_to_be
      retries: 10
      delay: 2
      loop: "{{ range(0, NRunningPeers | length) | list }}"

    - name: "{{ recipe_name }}: Apply cmd to remove fault injection from all peers."
      vars:
        stage: "recipe_cleanup"
        cmd: "enabled@false"
        where: "/fault_injection_points/name@raft_force_set_max_scan_entries"
      debug:
        msg: "{{ lookup('niova_ctlrequest', 'apply_cmd', NRunningPeers, cmd, where) }}"
      no_log: true

    - name: "{{ recipe_name }}: Reset max scan entries to 100000 and log reap factor to 5."
      include_role:
        name: common
        tasks_from: Reset_maxScan_logReap_factor
      vars:
          Peers: "{{ NRunningPeers[item] }}"
      loop: "{{ range(0, NRunningPeers | length) |list }}"

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
          terminate_recipe: true
