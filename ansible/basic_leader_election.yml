- import_playbook: term_catch_up.yml
- name: "basic_leader_election"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_leader_election"
     parent: "term_catch_up"
     #TODO Need to define array to start all peers
     peer_idx0: 0
     peer_idx1: 1
     peer_idx2: 2
     get_all_arr: []
  tasks:
    - name: "Start peer 2"
      set_fact: server1="{{lookup('niova_plugin', 'raftprocess', recipe_params, peer_idx2, "start", wantlist=True)}}"

    - name: "Retry until leader gets elected"
      vars:
         ctlreq_cmd:
             cmd: "get_all"
             wait_for_ofile: True
             recipe_name: "{{ recipe_name }}"
             peer_id: "{{ peer_idx0 }}"
             stage: "stage0"
         raft_keys:
             - "/raft_root_entry/*/leader-uuid"
      set_fact:
          raft_values="{{lookup('niova_plugin', 'lookup_create', recipe_params, ctlreq_cmd, raft_keys, wantlist=True)}}"
      loop: "{{ range(0, 5) | list }}"
      until: raft_values[0] != "null"
      retries: 5
      delay: 5
      ignore_errors: yes

    - name: "Verify stage 1 for basic leader election"
      vars:
         ctlreq_cmd:
             cmd: "get_all"
             wait_for_ofile: True
             recipe_name: "{{ recipe_name }}"
             peer_id: "{{ item }}"
             stage: "stage1"
         raft_keys:
              - "/raft_root_entry/*/commit-idx"
              - "/raft_root_entry/*/last-applied"
              - "/raft_root_entry/*/last-applied-cumulative-crc"
              - "/raft_root_entry/*/newest-entry-crc"
              - "/raft_root_entry/*/term"
              - "/raft_root_entry/*/newest-entry-term"
      set_fact: 
          raft_values="{{lookup('niova_plugin', 'lookup_create', recipe_params, ctlreq_cmd, raft_keys, wantlist=True)}}"
      failed_when: >
        (raft_values[0] != "0") or
        (raft_values[1] != "0") or
        (raft_values[2] != raft_values[3]) or
        (raft_values[4] != raft_values[5])
      loop: "{{ range(0, 2) | list}}"
