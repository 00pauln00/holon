- import_playbook: term_catch_up.yml
- name: "basic_leader_election"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_leader_election"
     parent: "term_catch_up"
     peer_idx0: 0
     peer_idx2: 2
  tasks:
    - name: "Start peer 2"
      set_fact: server1="{{lookup('niova_raftprocess', 'start', peer_idx2, wantlist=True)}}"

    - name: "Retry until leader gets elected"
      vars:
         stage: "leader-election"
         leader_key:
             - "/raft_root_entry/*/leader-uuid"
      set_fact:
          raft_values="{{lookup('niova_ctlrequest', 'lookup', 'get_all', peer_idx0, leader_key, wantlist=True)}}"
      until: raft_values[0] != "null"
      retries: 5
      delay: 2
      ignore_errors: yes
      loop: "{{ range(0, 5) | list }}"
      when: raft_values[0] != "null"
      loop_control:
         pause: 2

    - name: "Verify stage 1 for basic leader election"
      vars:
         stage: "stage0"
         raft_keys:
              - "/raft_root_entry/*/commit-idx"
              - "/raft_root_entry/*/last-applied"
              - "/raft_root_entry/*/last-applied-cumulative-crc"
              - "/raft_root_entry/*/newest-entry-crc"
              - "/raft_root_entry/*/term"
              - "/raft_root_entry/*/newest-entry-term"
      set_fact: 
          raft_values="{{lookup('niova_ctlrequest', 'lookup', 'get_all', item, raft_keys, wantlist=True)}}"
      failed_when: >
        (raft_values[0] != "0") or
        (raft_values[1] != "0") or
        (raft_values[2] != raft_values[3]) or
        (raft_values[4] != raft_values[5])
      loop: "{{ range(0, 2) | list}}"
