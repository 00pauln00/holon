- import_playbook: term_ticker.yml
- name: "basic_leader_election"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_leader_election"
     parent: "term_ticker"
     #TODO Need to define array to start all peers
     peer_idx0: 0
     peer_idx1: 1
     peer_idx2: 2
     get_all_arr: []
  tasks:
    - name: "Start peer 1"
      set_fact: server0="{{lookup('niova_plugin', 'raftprocess', recipe_params, peer_idx1, "start", wantlist=True)}}"

    - name: "Start peer 2"
      set_fact: server1="{{lookup('niova_plugin', 'raftprocess', recipe_params, peer_idx2, "start", wantlist=True)}}"

    - name: "Retry until leader gets elected"
      vars:
         ctlreq_cmd:
             cmd: "get_all"
             wait_for_ofile: True
             recipe_name: "{{ recipe_name }}"
             stage: "stage0"
             src: "src1"
      set_fact:
          peer0_get_all="{{lookup('niova_plugin', 'ctlrequest', recipe_params, peer_idx0, ctlreq_cmd, wantlist=True)}}"
          result="{{lookup('niova_plugin', 'query', recipe_params, peer0_get_all, '/raft_root_entry/*/leader-uuid', wantlist=True)}}"
      loop: "{{ range(0, 5) | list }}"
      until: result['raft_key'] != ""
      retries: 5
      ignore_errors: yes
      delay: 2

    - name: "Copy the get_all cmd to all peers to verify stage1"
      vars:
         ctlreq_cmd:
             cmd: "get_all"
             wait_for_ofile: True
             recipe_name: "{{ recipe_name }}"
             stage: "stage1"
             src: "src1"
      set_fact: 
        get_all_arr: "{{get_all_arr + [lookup('niova_plugin', 'ctlrequest', recipe_params, item, ctlreq_cmd, wantlist=True)] }}"
      loop: "{{ range(0, 2) | list }}"

    - name: "Verify stage 1 commit-idx"
      set_fact: result="{{lookup('niova_plugin', 'query', recipe_params, get_all_arr[item], "/raft_root_entry/*/commit-idx", wantlist=True)}}"
      failed_when: result['raft_key'] != 0
      loop: "{{ range(0, 2) | list}}"

    - name: "Verify stage 1 last-applied"
      set_fact: result="{{lookup('niova_plugin', 'query', recipe_params, get_all_arr[item], "/raft_root_entry/*/last-applied", wantlist=True)}}"
      failed_when: result['raft_key'] != 0
      loop: "{{ range(0, 2) | list}}"

    - name: "Verify stage 1 last-app-cumu-ctc == newest-entry-crc"
      set_fact:
         key1="{{lookup('niova_plugin', 'query', recipe_params, get_all_arr[item], "/raft_root_entry/*/last-applied-cumulative-crc", wantlist=True)}}"
         key2="{{lookup('niova_plugin', 'query', recipe_params, get_all_arr[item], "/raft_root_entry/*/newest-entry-crc", wantlist=True)}}"
      failed_when: key1['raft_key'] != key2['raft_key']
      loop: "{{ range(0, 2) | list}}"

    - name: "Verify stage 1 term == newest-entry-term"
      set_fact:
         key1="{{lookup('niova_plugin', 'query', recipe_params, get_all_arr[item], "/raft_root_entry/*/term", wantlist=True)}}"
         key2="{{lookup('niova_plugin', 'query', recipe_params, get_all_arr[item], "/raft_root_entry/*/newest-entry-term", wantlist=True)}}"
      failed_when: key1['raft_key'] != key2['raft_key']
      loop: "{{ range(0, 2) | list}}"
