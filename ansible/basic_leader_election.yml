- import_playbook: term_catch_up.yml
- name: "basic_leader_election"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_leader_election"
     parent: "term_catch_up"
     basic_elect_npeer_start: []

  tasks:
    - name: "Get the npeer from recipe json"
      set_fact:
        nserver={{ raft_conf | json_query('nservers')}}

    - name: "Get the total number of peers for basic leader election"
      set_fact:
        npeers_for_leader_elect={{nserver |int/2+1| int}}

    - name: "get value of number of peers to start now."
      set_fact:
        npeers_start="{{npeers_for_leader_elect| int | int - 2}}"

    - name: "Get the list of peer UUIDs to start for basic leader election."
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "Starting peers for basic leader election"
      set_fact: server1="{{lookup('niova_raftprocess', 'start', non_running_peers[item], wantlist=True)}}"
      loop: "{{ range(0, npeers_start| int) | list}}"
      #with_sequence: start=0 end="{{npeers_start}}"

    - name: "Wait until leader election happens"
      vars:
         stage: "leader-election"
      debug:
        msg: "Waiting for leader election"
      until: lookup('niova_ctlrequest', 'lookup', server0_uuid, '/raft_root_entry/0/leader-uuid', wantlist=True)| dict2items | map(attribute='value') | list | string != "null"
      loop: "{{ range(0, 4) | list}}"
      loop_control:
        pause: 2

    - name: "Get the latest list of running peer UUIDs"
      include_role:
        name: common
        tasks_from: get_server_uuid_info

    - name: "Verify stage 1 for basic leader election"
      vars:
         stage: "stage0"
         raft_keys:
              - "/raft_root_entry/0/commit-idx"
              - "/raft_root_entry/0/last-applied"
              - "/raft_root_entry/0/last-applied-cumulative-crc"
              - "/raft_root_entry/0/newest-entry-crc"
              - "/raft_root_entry/0/term"
              - "/raft_root_entry/0/newest-entry-term"
      set_fact: 
          raft_values="{{lookup('niova_ctlrequest', 'lookup', nrunning_peers[item], raft_keys, wantlist=True)}}"
      failed_when: >
        (raft_values["/0/commit-idx"] != 0) or
        (raft_values["/0/last-applied"] != 0) or
        (raft_values["/0/last-applied-cumulative-crc"] != raft_values["/0/newest-entry-crc"]) or
        (raft_values["/0/term"] != raft_values["/0/newest-entry-term"])
      loop: "{{ range(0, nrunning_peers|length - 1) | list}}"
      #with_sequence: start=0 end="{{nrunning_peers|length - 1}}"
