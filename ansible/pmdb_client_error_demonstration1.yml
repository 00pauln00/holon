- import_playbook: basic_raft_operation_with_client_activity.yml
  when: raft_param['ctype'] == "pumicedb"

- name: "PMDB Client Error Demonstration 1"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "pmdb_client_error_demonstration1"
     parent: "basic_raft_operation_with_client_activity"
     requirement: "pumicedb"
     client_obj: {}
     raft_keys:
            - "/pumice_db_test_client/pmdb-test-apps/0/app-user-id"
            - "/pumice_db_test_client/pmdb-test-apps/0/status"
            - "/pumice_db_test_client/pmdb-test-apps/0/pmdb-seqno"
            - "/pumice_db_test_client/pmdb-test-apps/0/pmdb-write-pending"
            - "/pumice_db_test_client/pmdb-test-apps/0/app-sync"
            - "/pumice_db_test_client/pmdb-test-apps/0/app-seqno"
            - "/raft_client_root_entry/0/recent-ops-wr"
  tasks:
    - name: "Verify the holon started with pumicedb cluster"
      debug:
        msg: "Recipe Requirement is: {{ requirement }}, where as 'cluster_type' passed: {{ raft_param['ctype'] }}"
      failed_when: requirement != raft_param['ctype']

    - name: "Create UUID for starting the client"
      shell: "/usr/bin/uuid"
      register: client_uuid

    - name: "Create app uuid"
      shell: "/usr/bin/uuid"
      register: app_uuid

    - name: "Prepare parameter to pass across recipes"
      set_fact:
        client_uuid: "{{ client_uuid.stdout }}"
        app_uuid: "{{ app_uuid.stdout }}"
        rncui: "{{ app_uuid.stdout }}:0:0:0:0"

    - debug:
        msg:
          - "client uuid: {{ client_uuid }}"
          - "app uuid: {{ app_uuid }}"
          - "rncui: {{ rncui }}"

    - name: "Start the client"
      include_role:
         name: common
         tasks_from: start_client
      vars:
         ClientUUID: "{{ client_uuid }}"

    - name: "Lookup on non-existing object."
      vars:
         stage: "lookup_stage"
         cmd: "input@{{ app_uuid }}:0:0:0:0.lookup"
         where: "/pumice_db_test_client/input"
         non_existing_obj_lookup: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ non_existing_obj_lookup }}"
 
    - name: "Verify parameters after lookup on non-existing object."
      vars:
        stage: "stage0"
        lookup_stage_keys:
            - "/raft_client_root_entry/0/recent-ops-rd"
            - "/pumice_db_test_client/pmdb-test-apps/0/app-user-id"
            - "/pumice_db_test_client/pmdb-test-apps/0/status"
            - "/pumice_db_test_client/pmdb-test-apps/0/last-request-tag"
      set_fact:
        stage0_values: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid, lookup_stage_keys, wantlist=True) }}"
      failed_when: >
        (stage0_values['/0/recent-ops-rd'][0]['sub-app-user-id'] != rncui) or
        (stage0_values['/0/recent-ops-rd'][0]['status'] != "Success") or
        (stage0_values['/0/app-user-id'] != rncui) or
        (stage0_values['/0/status'] != "No such file or directory") or
        (stage0_values['/0/last-request-tag'] != stage0_values['/0/recent-ops-rd'][0]['rpc-user-tag'])
     
    - name: "Apply invalid write sequence nunber."
      vars:
         stage: "invalid_seq_stage"
         cmd: "input@{{ app_uuid }}:0:0:0:0.write:1"
         where: "/pumice_db_test_client/input"
         invalid_write_seq: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ invalid_write_seq }}"

    - name: "Verify that write failed for invalid sequence number"
      vars:
        stage: "stage1"
      set_fact:
        stage1_values: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid, raft_keys, wantlist=True) }}"
      failed_when: >
        (stage1_values['/0/app-user-id'] != rncui) or
        (stage1_values['/0/status'] != "Invalid exchange") or
        (stage1_values['/0/pmdb-seqno'] != -1) or
        (stage1_values['/0/pmdb-write-pending'] != False) or
        (stage1_values['/0/app-sync'] != False) or
        (stage1_values['/0/app-seqno'] != 2) or
        (stage1_values['/0/recent-ops-wr'][0]['sub-app-user-id'] != rncui) or
        (stage1_values['/0/recent-ops-wr'][0]['status'] != "Success") 

    - name: "Now Apply valid write seqno i.e 0"
      vars:
         stage: "valid_seq_stage"
         cmd: "input@{{ app_uuid }}:0:0:0:0.write:0"
         where: "/pumice_db_test_client/input"
         valid_write_seq: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ valid_write_seq }}"

    - name: "Verify the parameters for successful write operation."
      vars:
        stage: "stage2"
      set_fact:
        stage2_values: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid, raft_keys, wantlist=True) }}"
      failed_when: >
        (stage2_values['/0/app-user-id'] != rncui) or
        (stage2_values['/0/status'] != "Success") or
        (stage2_values['/0/pmdb-seqno'] != 0) or
        (stage2_values['/0/pmdb-write-pending'] != False) or
        (stage2_values['/0/app-sync'] != True) or
        (stage2_values['/0/app-seqno'] != 1) or
        (stage2_values['/0/recent-ops-wr'][0]['sub-app-user-id'] != rncui) or
        (stage2_values['/0/recent-ops-wr'][0]['status'] != "Success")

    - name: "Apply invalid write seqno again i.e 2 (valid seqno would be 1)"
      vars:
         stage: "invalid_seqno2_stage"
         cmd: "input@{{ app_uuid }}:0:0:0:0.write:2"
         where: "/pumice_db_test_client/input"
         write_seq: "{{ lookup('niova_ctlrequest', 'apply_cmd', client_uuid, cmd, where, wantlist=True) }}"
      debug:
        msg: "{{ write_seq }}"

    - name: "Verify write should again fail with invalid seqno 2."
      vars:
        stage: "stage3"
      set_fact:
        stage3_values: "{{ lookup('niova_ctlrequest', 'lookup', client_uuid, raft_keys, wantlist=True) }}"
      failed_when: >
        (stage3_values['/0/app-user-id'] != rncui) or
        (stage3_values['/0/status'] != "Invalid exchange") or
        (stage3_values['/0/pmdb-seqno'] != 0) or
        (stage3_values['/0/pmdb-write-pending'] != False) or
        (stage3_values['/0/app-sync'] != False) or
        (stage3_values['/0/app-seqno'] != 3) or
        (stage3_values['/0/recent-ops-wr'][0]['sub-app-user-id'] != rncui) or
        (stage3_values['/0/recent-ops-wr'][0]['status'] != "Success")

