- name: "PMDB Client Error Demonstration"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "pmdb_client_error_demonstration_standalone_client"
     parent: None
     # XXX we should change hardcoded path later.
     pmdb_client_path: "/home/pauln/raft-builds/latest/pumicedb-client-test"
     raft_client_path: "/home/pauln/raft-builds/latest/raft-client"

  tasks:
  - block:
          - name: "{{ recipe_name }}: Check if parent recipe failed."
            debug: msg="Check if parent recipe {{ parent }} failed"
            failed_when: terminate_recipe == true

          - name: "{{ recipe_name }}: Extract the Base directory path and Raft UUID."
            set_fact:
               pmdb_standalone_raft_uuid: "{{ ClusterInfo | json_query('raft_uuid') }}"

          - name: "{{ recipe_name }}: Get unused client uuid for starting the client."
            include_role:
              name: common
              tasks_from: get_new_client_uuid
            register: client_uuid

          - debug:
              msg:
                - "{{ pmdb_standalone_raft_uuid }}"
                - "{{ client_uuid.stdout }}"
            
          - name: "{{ recipe_name }}: Starting the Raft client with wrong Raft UUID and Client UUID."
            vars:
              truncate_ruuid: "{{ pmdb_standalone_raft_uuid[:-1] }}"
              truncate_cuuid: "{{ client_uuid.stdout[:-1] }}" 
            command:
              argv:
                - "{{ raft_client_path }}"
                - -r
                - "{{ truncate_ruuid }}"
                - -u
                - "{{ truncate_cuuid }}"
            register: raft_output
            failed_when: raft_output.rc != 22
          - debug: var=raft_output.rc

          - name: "{{ recipe_name }}: Starting the pumicedb client with wrong Raft UUID and Client UUID."
            vars:
              truncate_ruuid: "{{ pmdb_standalone_raft_uuid[:-1] }}"
              truncate_cuuid: "{{ client_uuid.stdout[:-1] }}" 
            command:
              argv:
                - "{{ pmdb_client_path }}"
                - -r
                - "{{ truncate_ruuid }}"
                - -u
                - "{{ truncate_cuuid }}"
            register: pmdb_output
            failed_when: pmdb_output.rc == 0
          - debug: var=pmdb_output.rc

          - name: "{{ recipe_name }}: Starting the Raft client with wrong Raft UUID and Client UUID."
            vars:
              truncate_ruuid: "{{ pmdb_standalone_raft_uuid[:-1] }}"
              truncate_cuuid: "{{ client_uuid.stdout[:-1] }}"
            command:
              argv:
                - "{{ raft_client_path }}"
                - -r
                - "{{ truncate_ruuid }}"
                - -u
                - "{{ truncate_ruuid }}"
            register: raft_output
            failed_when: raft_output.rc != 22
          - debug: var=raft_output.rc

          - name: "{{ recipe_name }}: Starting the pumicedb client with wrong Raft UUID and Client UUID."
            vars:
              truncate_ruuid: "{{ pmdb_standalone_raft_uuid[:-1] }}"
              truncate_cuuid: "{{ client_uuid.stdout[:-1] }}"
            command:
              argv:
                - "{{ pmdb_client_path }}"
                - -r
                - "{{ truncate_ruuid }}"
                - -u
                - "{{ truncate_ruuid }}"
            register: pmdb_output
            failed_when: pmdb_output.rc == 0
          - debug: var=pmdb_output.rc

          - name: "{{ recipe_name }}: Ensure that raft client fails when '-u' is not passed"
            command:
              argv:
                - "{{ raft_client_path }}"
                - -r
                - "{{ pmdb_standalone_raft_uuid }}"
            register: ruuid_result
            failed_when: ruuid_result.rc == 0
          - debug: var=ruuid_result.rc

          - name: "{{ recipe_name }}: Ensure that raft client fails when '-r' is not passed."
            command:
              argv:
                - "{{ raft_client_path }}"
                - -u
                - "{{ client_uuid.stdout }}"
            register: cuuid_result
            failed_when: cuuid_result.rc == 0
          - debug: var=cuuid_result.rc

          - name: "{{ recipe_name }}: Ensure that pumicedb client fails when '-u' is not passed."
            command:
              argv:
                - "{{ pmdb_client_path }}"
                - -r
                - "{{ pmdb_standalone_raft_uuid }}"
            register: ruuid_return
            failed_when: ruuid_return.rc == 0
          - debug: var=ruuid_return.rc

          - name: "{{ recipe_name }}: Ensure that pumicedb client fails when '-r' is not passed."
            command:
              argv:
                - "{{ pmdb_client_path }}"
                - -u
                - "{{ client_uuid.stdout }}"
            register: cuuid_return
            failed_when: cuuid_return.rc == 0
          - debug: var=cuuid_return.rc

          - name: "{{ recipe_name }}: Run with raft-client by passing client uuid which is not known to the configuration."
            command:
              argv:
                - "{{ raft_client_path }}"
                - -r
                - "{{ pmdb_standalone_raft_uuid }}"
                - -u
                - "{{ client_uuid.stdout }}"
            register: raftclient_output
            failed_when: raftclient_output.rc != 2
          - debug: var=raftclient_output.rc

          - name: "{{ recipe_name }}: Run with pmdb-client by passing client uuid which is not known to the configuration."
            command:
              argv:
                - "{{ pmdb_client_path }}"
                - -r
                - "{{ pmdb_standalone_raft_uuid }}"
                - -u
                - "{{ client_uuid.stdout }}"
            register: pmdbclient_output
            failed_when: pmdbclient_output.rc == 0
          - debug: var=pmdbclient_output.rc

    rescue:
      - name: "Recipe failed"
        set_fact:
          terminate_recipe: true
