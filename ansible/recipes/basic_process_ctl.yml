- import_playbook: basic_ctl_int.yml
- name: "basic_process_ctl"
  hosts: localhost
  connection: local
  vars:
     recipe_name: "basic_process_ctl"
     parent: "basic_ctl_int"
     iterations: 5

  tasks:
  - block:
    - name: "Check if parent recipe failed"
      debug: msg="Check if parent recipe {{ parent }} failed"
      failed_when: terminate_recipe == true

    - name: "{{ recipe_name }}: Pause and resume peer0 in a loop"
      vars:
        stage: "stage0"
        wait_for_ofile: False
        pause_peer0: "{{ lookup('niova_raftprocess', 'pause', Server0UUID, wantlist=True) }}"
        curr_time_peer0: "{{ lookup('niova_ctlrequest', 'lookup', Server0UUID, '/system_info/current_time', wantlist=True) }}"
        resume_peer0: "{{ lookup('niova_raftprocess', 'resume', Server0UUID, wantlist=True) }}"
      debug:
        msg: "Pausing and resuming the peer: {{ Server0UUID }} in a loop"
      loop: "{{ range(0, iterations)| list }}"
      loop_control:
        pause: 5
    
    - name: "{{ recipe_name }}: Get the timestamp for peer0 in a loop with gap of 2secs"
      vars:
        stage: "stage1"
        iter_info:
           iter: 5
           sleep_after_cmd: 2
        curr_stamp: "{{ lookup('niova_ctlrequest', 'lookup', Server0UUID, '/system_info/current_time', iter_info, wantlist=True) }}"
      with_items:
        - "{{ curr_stamp }}"
      register: time_stamp
      debug:
        msg: "Get the current timestamp in a loop with 2sec sleep between iteration."

    - name: "{{ recipe_name }}: verify stage1: timestamp should be incremental in each iteration"
      vars:
        time_stamp_arr: "{{ time_stamp['results'] }}"
        time1: "{{ time_stamp_arr[item]['item']['/system_info/current_time'] }}"
        time2: "{{ time_stamp_arr[item + 1]['item']['/system_info/current_time'] }}"
      debug:
         msg: "Compare time stamp: {{ time1 }} with {{ time2 }}"
      failed_when: time1 >= time2
      loop: "{{ range(0, (iterations - 1))| list }}"

    rescue:
      - name: "Recipe: {{ recipe_name }} failed"
        set_fact:
           terminate_recipe: true
        failed_when: true
